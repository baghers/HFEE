


echo 1 > /sys/bus/i2c/drivers/INA231/0-0045/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0040/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0041/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0044/enable

echo userspace >/sys/devices/system/cpu/cpu3/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu4/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu5/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu6/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu7/cpufreq/scaling_governor
echo 2
echo 1400000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu3/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu4/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu5/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu6/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu7/cpufreq/scaling_max_freq
echo 3
echo 1400000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu1/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu3/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu4/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu5/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu6/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu7/cpufreq/scaling_min_freq
echo 4
cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_cur_freq

cnt=3
while [ $cnt -lt 4 ]
do
	if [ $cnt -eq 1 ]
	then
		rt0=3279 
		rt1=4661 
		rt2=92563 
		rt3=120528 
		rt4=51877  
		rt5=12436

		avgips0=218928005  
		avgips1=219208260  
		avgips2=229857935  
		avgips3=883221648  
		avgips4=1221367950  
		avgips5=1225674924  

		eer0=0.92
		eer1=0.89
		eer2=1.80
		eer3=1.12
		eer4=1.08
		eer5=1.30
 
		appnae1="specrand_base.arm"
		appnae2="specrand999"
		appnae3="mcf_base.ArmLinuxGnuAbi-"
		appnae4="perlbench_base.ArmLinuxGnuAbi-"
		appnae5="omnetpp_base.arm"
		appnae6="astar_base.arm"
			
		./spec/CPU2006/998.specrand/specrand_base.arm 9242 39332 spec/CPU2006/998.specrand/res.out 2> spec/CPU2006/998.specrand/res.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/999.specrand/specrand999 9242 39332 spec/CPU2006/999.specrand/res.out 2> spec/CPU2006/999.specrand/res.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/473.astar/astar_base.arm spec/CPU2006/473.astar/lake.cfg > spec/CPU2006/473.astar/astar.out 2> spec/CPU2006/473.astar/astar.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 2 ]
	then
		rt0=63778
		rt1=435498 
		rt2=42445 
		rt3=47497 
		rt4=88130  
		rt5=200896

		avgips0=1214322619   
		avgips1=1369214639  
		avgips2=1380937043   
		avgips3=1460850171   
		avgips4=1475138112   
		avgips5=1488867903  

		eer0=1.31
		eer1=1.25
		eer2=1.09
		eer3=0.96
		eer4=0.97
		eer5=1.08
 
		appnae1="gobmk_base.arm"
		appnae2="sjeng_base.arm"
		appnae3="GemsFDTD_base.arm"
		appnae4="povray_base.arm"
		appnae5="milc_base.arm"
		appnae6="cactusADM_base.arm"
			
		./spec/CPU2006/445.gobmk/gobmk_base.arm --quiet --mode gtp < spec/CPU2006/445.gobmk/dniwog.tst > spec/CPU2006/445.gobmk/gobmk.reff.score2.out 2> spec/CPU2006/445.gobmk/gobmk.ref.score2.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/458.sjeng/sjeng_base.arm spec/CPU2006/458.sjeng/ref.txt > spec/CPU2006/458.sjeng/sjeng.ref.out 2> spec/CPU2006/458.sjeng/sjeng.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/459.GemsFDTD/GemsFDTD_base.arm > spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.out 2> spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/436.cactusADM/cactusADM_base.arm spec/CPU2006/436.cactusADM/benchADM.par > spec/CPU2006/436.cactusADM/cactusADM.ref.out 2> spec/CPU2006/436.cactusADM/cactusADM.ref.err & 
		t5=$(($(date +%s%N)/1000000))	
	elif [ $cnt -eq 3 ]
	then
		rt0=66360
		rt1=251564 
		rt2=34253 
		rt3=7139 
		rt4=29643  
		rt5=98751

		avgips0=1543005401    
		avgips1=1558655713   
		avgips2=1612274795    
		avgips3=1621213004    
		avgips4=1621409626    
		avgips5=1701625147   

		eer0=1.26
		eer1=0.97
		eer2=0.96
		eer3=1.30
		eer4=1.06
		eer5=1.05
 
		appnae1="bzip2_base.ArmLinuxGnuAbi-"
		appnae2="gamess_base.arm"
		appnae3="calculix_base.arm"
		appnae4="Xalan_base.arm"
		appnae5="tonto_base.arm"
		appnae6="zeusmp_base.arm"
			
		./spec/CPU2006/401.bzip2/run/run_base_ref_ArmLinuxGnuAbi-.0000/bzip2_base.ArmLinuxGnuAbi- ./spec/CPU2006/401.bzip2/run/run_base_ref_ArmLinuxGnuAbi-.0000/input.program &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/416.gamess/gamess_base.arm < spec/CPU2006/416.gamess/cytosine.2.config > gamess.ref.cytosine.out 2> gamess.ref.cytosine.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/454.calculix/calculix_base.arm -i stairs > calculix.ref.out 2> calculix.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/483.xalancbmk/Xalan_base.arm -v spec/CPU2006/483.xalancbmk/test.xml spec/CPU2006/483.xalancbmk/xalanc.xsl &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/465.tonto/tonto_base.arm > spec/CPU2006/465.tonto/tonto.ref.out 2> spec/CPU2006/465.tonto/tonto.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/434.zeusmp/zeusmp_base.arm > zeusmp.ref.out 2> zeusmp.ref.err & 
		t5=$(($(date +%s%N)/1000000))	
	elif [ $cnt -eq 4 ]
	then
		rt0=34848
		rt1=139759 
		rt2=214224 
		rt3=191415 
		rt4=92563  
		rt5=120528

		avgips0=1905759519     
		avgips1=1934815242    
		avgips2=1080145489      
		avgips3=1206609988      
		avgips4=229857935     
		avgips5=883221648    

		eer0=2.12
		eer1=1.27
		eer2=1.13
		eer3=1.31
		eer4=1.80
		eer5=1.12
 
		appnae1="libquantum_base.arm"
		appnae2="h264ref_base.ArmLinuxGnuAbi-"
		appnae3="gcc_base.arm"
		appnae4="soplex_base.arm"
		appnae5="mcf_base.ArmLinuxGnuAbi-"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/462.libquantum/libquantum_base.arm 250 8 > spec/CPU2006/462.libquantum/libquantum.ref.out 2> spec/CPU2006/462.libquantum/libquantum.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/h264ref_base.ArmLinuxGnuAbi- -d ./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/foreman_ref_encoder_main.cfg &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/403.gcc/gcc_base.arm spec/CPU2006/403.gcc/200.i -o spec/CPU2006/403.gcc/200.s > spec/CPU2006/403.gcc/gcc.ref.200.out 2> spec/CPU2006/403.gcc/gcc.ref.200.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/450.soplex/soplex_base.arm -s1 -e -m15000 spec/CPU2006/450.soplex/pds-20.mps > spec/CPU2006/450.soplex/soplex.ref.pds-20.out 2> spec/CPU2006/450.soplex/soplex.ref.pds20.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 5 ]
	then
		rt0=160751
		rt1=98751 
		rt2=188156 
		rt3=210945 
		rt4=47497  
		rt5=120528

		avgips0=1776460007      
		avgips1=1701625147     
		avgips2=1799406948       
		avgips3=1880393579       
		avgips4=1460850171      
		avgips5=883221648     

		eer0=1.27
		eer1=1.05
		eer2=1.02
		eer3=1.04
		eer4=0.96
		eer5=1.12
 
		appnae1="leslie3d_base.arm"
		appnae2="zeusmp_base.arm"
		appnae3="lbm_base.arm"
		appnae4="hmmer_base.ArmLinuxGnuAbi-"
		appnae5="povray_base.arm"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/437.leslie3d/leslie3d_base.arm < spec/CPU2006/437.leslie3d/leslie3d.in > spec/CPU2006/437.leslie3d/leslie3d.ref.out 2> spec/CPU2006/437.leslie3d/leslie3d.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/434.zeusmp/zeusmp_base.arm > zeusmp.ref.out 2> zeusmp.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/470.lbm/lbm_base.arm 30 spec/CPU2006/470.lbm/reference.dat 0 0 spec/CPU2006/470.lbm/100_100_130_ldc.of > spec/CPU2006/470.lbm/lbm.ref.out 2> spec/CPU2006/470.lbm/lbm.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/hmmer_base.ArmLinuxGnuAbi-  --num 50000 ./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/nph3.hmm &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 6 ]
	then
		rt0=40342
		rt1=127320 
		rt2=160751 
		rt3=98751 
		rt4=188156  
		rt5=120528

		avgips0=1761880491       
		avgips1=1775008158      
		avgips2=1776460007        
		avgips3=1701625147        
		avgips4=1799406948       
		avgips5=883221648      

		eer0=0.91
		eer1=1.12
		eer2=1.27
		eer3=1.05
		eer4=1.02
		eer5=1.12
 
		appnae1="gromacs"
		appnae2="bwaves_base.arm"
		appnae3="leslie3d_base.arm"
		appnae4="zeusmp_base.arm"
		appnae5="lbm_base.arm"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/435.gromacs/gromacs -silent -deffnm gromacs -nice 0 > gromacs.ref.out 2> gromacs.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/410.bwaves/bwaves_base.arm bwaves.in > bwaves.out 2> bwaves.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/437.leslie3d/leslie3d_base.arm < spec/CPU2006/437.leslie3d/leslie3d.in > spec/CPU2006/437.leslie3d/leslie3d.ref.out 2> spec/CPU2006/437.leslie3d/leslie3d.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/434.zeusmp/zeusmp_base.arm > zeusmp.ref.out 2> zeusmp.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/470.lbm/lbm_base.arm 30 spec/CPU2006/470.lbm/reference.dat 0 0 spec/CPU2006/470.lbm/100_100_130_ldc.of > spec/CPU2006/470.lbm/lbm.ref.out 2> spec/CPU2006/470.lbm/lbm.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))	
	elif [ $cnt -eq 7 ]
	then
		rt0=210945
		rt1=34848 
		rt2=139759 
		rt3=47497 
		rt4=88130  
		rt5=200896

		avgips0=1880393579        
		avgips1=1905759519       
		avgips2=1934815242         
		avgips3=1460850171         
		avgips4=1475138112        
		avgips5=1488867903       

		eer0=1.04
		eer1=2.12
		eer2=1.27
		eer3=0.96
		eer4=0.97
		eer5=1.08
 
		appnae1="hmmer_base.ArmLinuxGnuAbi-"
		appnae2="libquantum_base.arm"
		appnae3="h264ref_base.ArmLinuxGnuAbi-"
		appnae4="povray_base.arm"
		appnae5="milc_base.arm"
		appnae6="cactusADM_base.arm"
			
		./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/hmmer_base.ArmLinuxGnuAbi-  --num 50000 ./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/nph3.hmm &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/462.libquantum/libquantum_base.arm 250 8 > spec/CPU2006/462.libquantum/libquantum.ref.out 2> spec/CPU2006/462.libquantum/libquantum.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/h264ref_base.ArmLinuxGnuAbi- -d ./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/foreman_ref_encoder_main.cfg &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/436.cactusADM/cactusADM_base.arm spec/CPU2006/436.cactusADM/benchADM.par > spec/CPU2006/436.cactusADM/cactusADM.ref.out 2> spec/CPU2006/436.cactusADM/cactusADM.ref.err & 
		t5=$(($(date +%s%N)/1000000))	
	elif [ $cnt -eq 8 ]
	then
		rt0=7139
		rt1=191415 
		rt2=42445 
		rt3=47497 
		rt4=88130  
		rt5=120528

		avgips0=1621213004         
		avgips1=1206609988        
		avgips2=1380937043          
		avgips3=1460850171         
		avgips4=1475138112        
		avgips5=883221648        

		eer0=1.30
		eer1=1.31
		eer2=1.09
		eer3=0.96
		eer4=0.97
		eer5=1.12
 
		appnae1="Xalan_base.arm"
		appnae2="soplex_base.arm"
		appnae3="GemsFDTD_base.arm"
		appnae4="povray_base.arm"
		appnae5="milc_base.arm"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/483.xalancbmk/Xalan_base.arm -v spec/CPU2006/483.xalancbmk/test.xml spec/CPU2006/483.xalancbmk/xalanc.xsl &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/450.soplex/soplex_base.arm -s1 -e -m15000 spec/CPU2006/450.soplex/pds-20.mps > spec/CPU2006/450.soplex/soplex.ref.pds-20.out 2> spec/CPU2006/450.soplex/soplex.ref.pds20.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/459.GemsFDTD/GemsFDTD_base.arm > spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.out 2> spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 9 ]
	then
		rt0=42445
		rt1=47497 
		rt2=88130 
		rt3=51877 
		rt4=92563  
		rt5=120528

		avgips0=1380937043          
		avgips1=1460850171         
		avgips2=1475138112           
		avgips3=1221367950          
		avgips4=229857935         
		avgips5=883221648         

		eer0=1.09
		eer1=0.96
		eer2=0.97
		eer3=1.08
		eer4=1.80
		eer5=1.12
 
		appnae1="GemsFDTD_base.arm"
		appnae2="povray_base.arm"
		appnae3="milc_base.arm"
		appnae4="omnetpp_base.arm"
		appnae5="mcf_base.ArmLinuxGnuAbi-"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/459.GemsFDTD/GemsFDTD_base.arm > spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.out 2> spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 10 ]
	then
		rt0=200896
		rt1=42445 
		rt2=47497 
		rt3=88130 
		rt4=120528  
		rt5=51877

		avgips0=1488867903           
		avgips1=1380937043          
		avgips2=1460850171            
		avgips3=1475138112           
		avgips4=883221648          
		avgips5=1221367950          

		eer0=1.08
		eer1=1.09
		eer2=0.96
		eer3=0.97
		eer4=1.12
		eer5=1.08
 
		appnae1="cactusADM_base.arm"
		appnae2="GemsFDTD_base.arm"
		appnae3="povray_base.arm"
		appnae4="milc_base.arm"
		appnae5="perlbench_base.ArmLinuxGnuAbi-"
		appnae6="omnetpp_base.arm"
			
		./spec/CPU2006/436.cactusADM/cactusADM_base.arm spec/CPU2006/436.cactusADM/benchADM.par > spec/CPU2006/436.cactusADM/cactusADM.ref.out 2> spec/CPU2006/436.cactusADM/cactusADM.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/459.GemsFDTD/GemsFDTD_base.arm > spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.out 2> spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 11 ]
	then
		rt0=191415
		rt1=42445 
		rt2=47497 
		rt3=88130 
		rt4=200896 
		rt5=51877

		avgips0=1206609988            
		avgips1=1380937043          
		avgips2=1460850171            
		avgips3=1475138112           
		avgips4=1488867903           
		avgips5=1221367950           

		eer0=1.31
		eer1=1.09
		eer2=0.96
		eer3=0.97
		eer4=1.08
		eer5=1.08
 
		appnae1="soplex_base.arm"
		appnae2="GemsFDTD_base.arm"
		appnae3="povray_base.arm"
		appnae4="milc_base.arm"
		appnae5="cactusADM_base.arm"
		appnae6="omnetpp_base.arm"
			
		./spec/CPU2006/450.soplex/soplex_base.arm -s1 -e -m15000 spec/CPU2006/450.soplex/pds-20.mps > spec/CPU2006/450.soplex/soplex.ref.pds-20.out 2> spec/CPU2006/450.soplex/soplex.ref.pds20.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/459.GemsFDTD/GemsFDTD_base.arm > spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.out 2> spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/436.cactusADM/cactusADM_base.arm spec/CPU2006/436.cactusADM/benchADM.par > spec/CPU2006/436.cactusADM/cactusADM.ref.out 2> spec/CPU2006/436.cactusADM/cactusADM.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 12 ]
	then
		rt0=214224
		rt1=191415 
		rt2=51877 
		rt3=12436 
		rt4=92563 
		rt5=120528

		avgips0=1080145489             
		avgips1=1206609988           
		avgips2=1221367950             
		avgips3=1225674924            
		avgips4=229857935            
		avgips5=883221648            

		eer0=1.13
		eer1=1.31
		eer2=1.08
		eer3=1.30
		eer4=1.80
		eer5=1.12
 
		appnae1="gcc_base.arm"
		appnae2="soplex_base.arm"
		appnae3="omnetpp_base.arm"
		appnae4="astar_base.arm"
		appnae5="mcf_base.ArmLinuxGnuAbi-"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/403.gcc/gcc_base.arm spec/CPU2006/403.gcc/200.i -o spec/CPU2006/403.gcc/200.s > spec/CPU2006/403.gcc/gcc.ref.200.out 2> spec/CPU2006/403.gcc/gcc.ref.200.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/450.soplex/soplex_base.arm -s1 -e -m15000 spec/CPU2006/450.soplex/pds-20.mps > spec/CPU2006/450.soplex/soplex.ref.pds-20.out 2> spec/CPU2006/450.soplex/soplex.ref.pds20.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/473.astar/astar_base.arm spec/CPU2006/473.astar/lake.cfg > spec/CPU2006/473.astar/astar.out 2> spec/CPU2006/473.astar/astar.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 13 ]
	then
		rt0=63778
		rt1=127320 
		rt2=12436 
		rt3=92563 
		rt4=120528 
		rt5=51877

		avgips0=1214322619              
		avgips1=1775008158           
		avgips2=1225674924             
		avgips3=229857935            
		avgips4=883221648            
		avgips5=1221367950             

		eer0=1.31
		eer1=1.12
		eer2=1.30
		eer3=1.80
		eer4=1.12
		eer5=1.08
 
		appnae1="gobmk_base.arm"
		appnae2="bwaves_base.arm"
		appnae3="astar_base.arm"
		appnae4="mcf_base.ArmLinuxGnuAbi-"
		appnae5="perlbench_base.ArmLinuxGnuAbi-"
		appnae6="omnetpp_base.arm"
			
		./spec/CPU2006/445.gobmk/gobmk_base.arm --quiet --mode gtp < spec/CPU2006/445.gobmk/dniwog.tst > spec/CPU2006/445.gobmk/gobmk.reff.score2.out 2> spec/CPU2006/445.gobmk/gobmk.ref.score2.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/410.bwaves/bwaves_base.arm bwaves.in > bwaves.out 2> bwaves.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/473.astar/astar_base.arm spec/CPU2006/473.astar/lake.cfg > spec/CPU2006/473.astar/astar.out 2> spec/CPU2006/473.astar/astar.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 14 ]
	then
		rt0=160751
		rt1=720325 
		rt2=188156 
		rt3=120528 
		rt4=51877 
		rt5=92563

		avgips0=1776460007               
		avgips1=1795699576            
		avgips2=1799406948              
		avgips3=883221648             
		avgips4=1221367950             
		avgips5=229857935              

		eer0=1.27
		eer1=1.04
		eer2=1.02
		eer3=1.12
		eer4=1.08
		eer5=1.80
 
		appnae1="leslie3d_base.arm"
		appnae2="namd_base.arm"
		appnae3="lbm_base.arm"
		appnae4="perlbench_base.ArmLinuxGnuAbi-"
		appnae5="omnetpp_base.arm"
		appnae6="mcf_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/437.leslie3d/leslie3d_base.arm < spec/CPU2006/437.leslie3d/leslie3d.in > spec/CPU2006/437.leslie3d/leslie3d.ref.out 2> spec/CPU2006/437.leslie3d/leslie3d.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/444.namd/namd_base.arm --input spec/CPU2006/444.namd/namd.input --iterations 1 --output spec/CPU2006/444.namd/namd.out > spec/CPU2006/444.namd/namd.ref.out 2> spec/CPU2006/444.namd/namd.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/470.lbm/lbm_base.arm 30 spec/CPU2006/470.lbm/reference.dat 0 0 spec/CPU2006/470.lbm/100_100_130_ldc.of > spec/CPU2006/470.lbm/lbm.ref.out 2> spec/CPU2006/470.lbm/lbm.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 15 ]
	then
		rt0=40342
		rt1=127320 
		rt2=51877 
		rt3=12436 
		rt4=92563 
		rt5=120528

		avgips0=1761880491              
		avgips1=1775008158           
		avgips2=1221367950             
		avgips3=1225674924            
		avgips4=229857935            
		avgips5=883221648            

		eer0=0.91
		eer1=1.13
		eer2=1.08
		eer3=1.30
		eer4=1.80
		eer5=1.12
 
		appnae1="gromacs"
		appnae2="bwaves_base.arm"
		appnae3="omnetpp_base.arm"
		appnae4="astar_base.arm"
		appnae5="mcf_base.ArmLinuxGnuAbi-"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/435.gromacs/gromacs -silent -deffnm gromacs -nice 0 > gromacs.ref.out 2> gromacs.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/410.bwaves/bwaves_base.arm bwaves.in > bwaves.out 2> bwaves.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/473.astar/astar_base.arm spec/CPU2006/473.astar/lake.cfg > spec/CPU2006/473.astar/astar.out 2> spec/CPU2006/473.astar/astar.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	fi


	pid0="$(pidof ${appnae1})"
	pid1="$(pidof ${appnae2})"
	pid2="$(pidof ${appnae3})"
	pid3="$(pidof ${appnae4})"
	pid4="$(pidof ${appnae5})"
	pid5="$(pidof ${appnae6})"

	taskset -cp 2,3,6,7 $pid0
	taskset -cp 2,3,6,7 $pid1
	taskset -cp 2,3,6,7 $pid2
	taskset -cp 2,3,6,7 $pid3
	taskset -cp 2,3,6,7 $pid4
	taskset -cp 2,3,6,7 $pid5
	pcnt=6
	prevt0=$t0
	prevt1=$t1
	prevt2=$t2
	prevt3=$t3
	prevt4=$t4
	prevt5=$t5
	totalins0=0
	totalins1=0
	totalins2=0
	totalins3=0
	totalins4=0
	totalins5=0
	totaldur0=0
	totaldur1=0
	totaldur2=0
	totaldur3=0
	totaldur4=0
	totaldur5=0
	EDP=0
	curtedp=$(($(date +%s%N)/1000000))
	while [ $(echo ${#pcnt}) -gt 0 ]
	do
		if [ $(echo ${#pid0}) -gt 0 ]
		then
		taskset -cp 2 $pid0
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 2 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF0l=$(($(( $s2 - $s1 ))))
		v0="2':"
		rest0=${poutput#*$v0}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		instructions0l=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions0l="$(echo "${instructions0l//,}")"
		fi
	
		if [ $(echo ${#pid1}) -gt 0 ]
		then
		taskset -cp 3 $pid1
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 3 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF1l=$(($(( $s2 - $s1 ))))
		v0="3':"
		rest0=${poutput#*$v0}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		instructions1l=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions1l="$(echo "${instructions1l//,}")"
		fi
	
		if [ $(echo ${#pid2}) -gt 0 ]
		then
		taskset -cp 6 $pid2
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 6 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF2b=$(($(( $s2 - $s1 ))))
		v0="6':"
		v7="instructions"
		rest0=${poutput#*$v0}
		rest7=${poutput#*$v7}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		p7=$(( ${#poutput} - ${#rest7} - ${#v7} ))
		instructions2b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions2b="$(echo "${instructions2b//,}")"
		fi

		if [ $(echo ${#pid3}) -gt 0 ]
		then
		taskset -cp 7 $pid3
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 7 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF3b=$(($(( $s2 - $s1 ))))
		v0="7':"
		v7="instructions"
		rest0=${poutput#*$v0}
		rest7=${poutput#*$v7}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		p7=$(( ${#poutput} - ${#rest7} - ${#v7} ))
		instructions3b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions3b="$(echo "${instructions3b//,}")"
		fi

	
		if [ $(echo ${#pid2}) -gt 0 ]
		then
		taskset -cp 2 $pid2
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 2 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF2l=$(($(( $s2 - $s1 ))))
		v0="2':"
		v7="instructions"
		rest0=${poutput#*$v0}
		rest7=${poutput#*$v7}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		p7=$(( ${#poutput} - ${#rest7} - ${#v7} ))
		instructions2l=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions2l="$(echo "${instructions2l//,}")"
		fi

		if [ $(echo ${#pid3}) -gt 0 ]
		then
		taskset -cp 3 $pid3
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 3 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF3l=$(($(( $s2 - $s1 ))))
		v0="3':"
		v7="instructions"
		rest0=${poutput#*$v0}
		rest7=${poutput#*$v7}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		p7=$(( ${#poutput} - ${#rest7} - ${#v7} ))
		instructions3l=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions3l="$(echo "${instructions3l//,}")"
		fi
	
		if [ $(echo ${#pid0}) -gt 0 ]
		then
		taskset -cp 6 $pid0
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 6 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF0b=$(($(( $s2 - $s1 ))))
		v0="6':"
		v7="instructions"
		rest0=${poutput#*$v0}
		rest7=${poutput#*$v7}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		p7=$(( ${#poutput} - ${#rest7} - ${#v7} ))
		instructions0b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions0b="$(echo "${instructions0b//,}")"
		fi
	
		if [ $(echo ${#pid1}) -gt 0 ]
		then
		taskset -cp 7 $pid1
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 7 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF1b=$(($(( $s2 - $s1 ))))
		v0="7':"
		v7="instructions"
		rest0=${poutput#*$v0}
		rest7=${poutput#*$v7}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		p7=$(( ${#poutput} - ${#rest7} - ${#v7} ))
		instructions1b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions1b="$(echo "${instructions1b//,}")"
		fi

		
		
		if [ $(echo ${#pid4}) -gt 0 ]
		then
		taskset -cp 1 $pid4
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 1 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF4l=$(($(( $s2 - $s1 ))))
		v0="1':"
		rest0=${poutput#*$v0}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		instructions4l=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions4l="$(echo "${instructions4l//,}")"
		fi
				
		if [ $(echo ${#pid5}) -gt 0 ]
		then
		taskset -cp 5 $pid5
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 5 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF5b=$(($(( $s2 - $s1 ))))
		v0="5':"
		rest0=${poutput#*$v0}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		instructions5b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions5b="$(echo "${instructions5b//,}")"
		fi
		if [ $(echo ${#pid4}) -gt 0 ]
		then
		taskset -cp 5 $pid4
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 5 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF4b=$(($(( $s2 - $s1 ))))
		v0="5':"
		rest0=${poutput#*$v0}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		instructions4b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions4b="$(echo "${instructions4b//,}")"
		fi
				
		if [ $(echo ${#pid5}) -gt 0 ]
		then
		taskset -cp 1 $pid5
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e instructions  -C 1 sleep 0.1 2>&1`
		echo $poutput
		s2=$(($(date +%s%N)/1000000))
		DIFF5l=$(($(( $s2 - $s1 ))))
		v0="1':"
		rest0=${poutput#*$v0}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		instructions5l=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions5l="$(echo "${instructions5l//,}")"
		fi
	ips0="$(echo "scale=2; $(( $instructions0b*$DIFF0l ))/$(( $instructions0l*$DIFF0b ))" | bc)"
	ips1="$(echo "scale=2; $(( $instructions1b*$DIFF1l ))/$(( $instructions1l*$DIFF1b ))" | bc)"
	ips2="$(echo "scale=2; $(( $instructions2b*$DIFF2l ))/$(( $instructions2l*$DIFF2b ))" | bc)"
	ips3="$(echo "scale=2; $(( $instructions3b*$DIFF3l ))/$(( $instructions3l*$DIFF3b ))" | bc)"
	ips4="$(echo "scale=2; $(( $instructions4b*$DIFF4l ))/$(( $instructions4l*$DIFF4b ))" | bc)"
	ips5="$(echo "scale=2; $(( $instructions5b*$DIFF5l ))/$(( $instructions5l*$DIFF5b ))" | bc)"


	fishare="$(./minfair 0.98 $ips0 $ips1 $ips2 $ips3 $ips4 $ips5)"
	fisharearray=($fishare)
	f1roundtotal=${fisharearray[0]}
	f2roundtotal=${fisharearray[1]}
	f3roundtotal=${fisharearray[2]}
	f4roundtotal=${fisharearray[3]}
	f5roundtotal=${fisharearray[4]}
	f6roundtotal=${fisharearray[5]}

	s1roundtotal=$(( 66 - $f1roundtotal ))
	s2roundtotal=$(( 66 - $f2roundtotal ))
	s3roundtotal=$(( 66 - $f3roundtotal ))
	s4roundtotal=$(( 66 - $f4roundtotal ))
	s5roundtotal=$(( 66 - $f5roundtotal ))
	s6roundtotal=$(( 66 - $f6roundtotal ))

	if [ $pcnt -lt 4 ]
	then
		f1roundtotal=66
		f2roundtotal=66
		f3roundtotal=66
		f4roundtotal=66
		f5roundtotal=66
		f6roundtotal=66
	else
		s1roundtotal=0
		s2roundtotal=0
		s3roundtotal=0
		s4roundtotal=0
		f5roundtotal=0
		f6roundtotal=0
	fi

	f1round=0
	f2round=0
	f3round=0
	f4round=0
	f5round=0
	f6round=0
	s1round=0
	s2round=0
	s3round=0
	s4round=0
	s5round=0
	s6round=0
	#echo "$f1roundtotal $f2roundtotal $f3roundtotal $f4roundtotal $s1roundtotal $s2roundtotal $s3roundtotal $s4roundtotal"
	for ((i=1;i < 67;i++))
	{
		s1=$(($(date +%s%N)/1000000))
	
		avablablebig=3
		avablablelittle=3
		p1=""
		p2=""
		p3=""
		p4=""
		p5=""
		p6=""
	
		if [ $f1round -eq $f1roundtotal ] && [ $s1round -lt $s1roundtotal ] && [ $(echo ${#pid0}) -gt 0 ] && [ $pcnt -gt 3 ]
		then
			if [ $avablablelittle -lt 3 ]  
			then
				p1="taskset -cp 2 $pid0"
			elif [ $avablablelittle -lt 2 ] 
			then
				p1="taskset -cp 3 $pid0"
			else
				p1="taskset -cp 1 $pid0"
			fi
		
			avablablelittle=$(( $avablablelittle - 1 ))
			s1round=$(( $s1round + 1 )) 	
		fi
		if [ $f2round -eq $f2roundtotal ] && [ $s2round -lt $s2roundtotal ] && [ $(echo ${#pid1}) -gt 0 ] && [ $pcnt -gt 3 ]
		then
			if [ $avablablelittle -lt 3 ]  
			then
				p2="taskset -cp 2 $pid1"
			elif [ $avablablelittle -lt 2 ] 
			then
				p2="taskset -cp 3 $pid1"
			else
				p2="taskset -cp 1 $pid1"
			fi
			avablablelittle=$(( $avablablelittle - 1 ))
			s2round=$(( $s2round + 1 )) 	
		fi
		if [ $f3round -eq $f3roundtotal ] && [ $s3round -lt $s3roundtotal ] && [ $(echo ${#pid2}) -gt 0 ] && [ $pcnt -gt 3 ] 
		then
			if [ $avablablelittle -lt 3 ]  
			then
				p3="taskset -cp 2 $pid2"
			elif [ $avablablelittle -lt 2 ] 
			then
				p3="taskset -cp 3 $pid2"
			else
				p3="taskset -cp 1 $pid2"
			fi
			avablablelittle=$(( $avablablelittle - 1 ))
			s3round=$(( $s3round + 1 )) 	
		fi
		if [ $f4round -eq $f4roundtotal ] && [ $s4round -lt $s4roundtotal ] && [ $(echo ${#pid3}) -gt 0 ] && [ $pcnt -gt 3 ] 
		then
			if [ $avablablelittle -lt 3 ]  
			then
				p4="taskset -cp 2 $pid3"
			elif [ $avablablelittle -lt 2 ] 
			then
				p4="taskset -cp 3 $pid3"
			else
				p4="taskset -cp 1 $pid3"
			fi
			avablablelittle=$(( $avablablelittle - 1 ))
			s4round=$(( $s4round + 1 )) 	
		fi
		if [ $f5round -eq $f5roundtotal ] && [ $s5round -lt $s5roundtotal ] && [ $(echo ${#pid4}) -gt 0 ] && [ $pcnt -gt 3 ] 
		then
			if [ $avablablelittle -lt 3 ]  
			then
				p5="taskset -cp 2 $pid4"
			elif [ $avablablelittle -lt 2 ] 
			then
				p5="taskset -cp 3 $pid4"
			else
				p5="taskset -cp 1 $pid4"
			fi
			avablablelittle=$(( $avablablelittle - 1 ))
			s5round=$(( $s5round + 1 )) 	
		fi
		if [ $f6round -eq $f6roundtotal ] && [ $s6round -lt $s6roundtotal ] && [ $(echo ${#pid5}) -gt 0 ] && [ $pcnt -gt 3 ] 
		then
			if [ $avablablelittle -lt 3 ]  
			then
				p6="taskset -cp 2 $pid5"
			elif [ $avablablelittle -lt 2 ] 
			then
				p6="taskset -cp 3 $pid5"
			else
				p6="taskset -cp 1 $pid5"
			fi
			avablablelittle=$(( $avablablelittle - 1 ))
			s6round=$(( $s6round + 1 )) 	
		fi
		if [ $s1round -eq $s1roundtotal ] && [ $f1round -lt $f1roundtotal ] && [ $(echo ${#pid0}) -gt 0 ] 
		then
			if [ $avablablebig -lt 3 ]  
			then
				p1="taskset -cp 7 $pid0"
			elif [ $avablablebig -lt 2 ] 
			then
				p1="taskset -cp 6 $pid0"
			else
				p1="taskset -cp 5 $pid0"
			fi
			avablablebig=$(( $avablablebig - 1 ))
			f1round=$(( $f1round + 1 )) 	
		fi
		if [ $s2round -eq $s2roundtotal ] && [ $f2round -lt $f2roundtotal ] && [ $(echo ${#pid1}) -gt 0 ] 
		then
			if [ $avablablebig -lt 3 ]  
			then
				p2="taskset -cp 7 $pid1"
			elif [ $avablablebig -lt 2 ] 
			then
				p2="taskset -cp 6 $pid1"
			else
				p2="taskset -cp 5 $pid1"
			fi
			avablablebig=$(( $avablablebig - 1 ))
			f2round=$(( $f2round + 1 )) 	
		fi
		if [ $s3round -eq $s3roundtotal ] && [ $f3round -lt $f3roundtotal ] && [ $(echo ${#pid2}) -gt 0 ]
		then
			if [ $avablablebig -lt 3 ]  
			then
				p3="taskset -cp 7 $pid2"
			elif [ $avablablebig -lt 2 ] 
			then
				p3="taskset -cp 6 $pid2"
			else
				p3="taskset -cp 5 $pid2"
			fi
			avablablebig=$(( $avablablebig - 1 ))
			f3round=$(( $f3round + 1 )) 	
		fi
		if [ $s4round -eq $s4roundtotal ] && [ $f4round -lt $f4roundtotal ] && [ $(echo ${#pid3}) -gt 0 ]
		then
			if [ $avablablebig -lt 3 ]  
			then
				p4="taskset -cp 7 $pid3"
			elif [ $avablablebig -lt 2 ] 
			then
				p4="taskset -cp 6 $pid3"
			else
				p4="taskset -cp 5 $pid3"
			fi
			avablablebig=$(( $avablablebig - 1 ))
			f4round=$(( $f4round + 1 )) 	
		fi	
		if [ $s5round -eq $s5roundtotal ] && [ $f5round -lt $f5roundtotal ] && [ $(echo ${#pid4}) -gt 0 ]
		then
			if [ $avablablebig -lt 3 ]  
			then
				p5="taskset -cp 7 $pid4"
			elif [ $avablablebig -lt 2 ] 
			then
				p5="taskset -cp 6 $pid4"
			else
				p5="taskset -cp 5 $pid4"
			fi
			avablablebig=$(( $avablablebig - 1 ))
			f5round=$(( $f5round + 1 )) 	
		fi	
		if [ $s6round -eq $s6roundtotal ] && [ $f6round -lt $f6roundtotal ] && [ $(echo ${#pid5}) -gt 0 ]
		then
			if [ $avablablebig -lt 3 ]  
			then
				p6="taskset -cp 7 $pid5"
			elif [ $avablablebig -lt 2 ] 
			then
				p6="taskset -cp 6 $pid5"
			else
				p6="taskset -cp 5 $pid5"
			fi
			avablablebig=$(( $avablablebig - 1 ))
			f6round=$(( $f6round + 1 )) 	
		fi	
		#############################################################
		
		
		if [ ${#p1} -eq 0 ] && [ $(echo ${#pid0}) -gt 0 ]
		then
			if ([ $f1round -le $s1round ] && [ $f1round -lt $f1roundtotal ] && [ $avablablebig -gt 0 ]) || [ $avablablelittle -eq 0 ]  
			then
				if [ $avablablebig -lt 3 ]  
				then
					p1="taskset -cp 7 $pid0"
				elif [ $avablablebig -lt 2 ] 
				then
					p1="taskset -cp 6 $pid0"
				else
					p1="taskset -cp 5 $pid0"
				fi
				avablablebig=$(( $avablablebig - 1 ))
				f1round=$(( $f1round + 1 ))
				else
					if [ $avablablelittle -lt 3 ]  
					then
						p1="taskset -cp 2 $pid0"
					elif [ $avablablelittle -lt 2 ] 
					then
						p1="taskset -cp 3 $pid0"
					else
						p1="taskset -cp 1 $pid0"
					fi
					avablablelittle=$(( $avablablelittle - 1 ))
					s1round=$(( $s1round + 1 ))
				fi
		fi
	
		if [ ${#p2} -eq 0 ] && [ $(echo ${#pid1}) -gt 0 ]
		then
		if ([ $f2round -le $s2round ] && [ $f2round -lt $f2roundtotal ] && [ $avablablebig -gt 0 ]) || [ $avablablelittle -eq 0 ] 
		then
			if [ $avablablebig -lt 3 ]  
			then
				p2="taskset -cp 7 $pid1"
			elif [ $avablablebig -lt 2 ] 
			then
				p2="taskset -cp 6 $pid1"
			else
				p2="taskset -cp 5 $pid1"
			fi
			avablablebig=$(( $avablablebig - 1 ))
			f2round=$(( $f2round + 1 ))
		else
			if [ $avablablelittle -lt 3 ]  
			then
				p2="taskset -cp 2 $pid1"
			elif [ $avablablelittle -lt 2 ] 
			then
				p2="taskset -cp 3 $pid1"
			else
				p2="taskset -cp 1 $pid1"
			fi
			avablablelittle=$(( $avablablelittle - 1 ))
			s2round=$(( $s2round + 1 ))
		fi	
		fi
	
		if [ ${#p3} -eq 0 ] && [ $(echo ${#pid2}) -gt 0 ]
		then
		if ([ $f3round -le $s3round ] && [ $f3round -lt $f3roundtotal ] && [ $avablablebig -gt 0 ]) || [ $avablablelittle -eq 0 ] 
		then
			if [ $avablablebig -lt 3 ]  
			then
				p3="taskset -cp 7 $pid2"
			elif [ $avablablebig -lt 2 ] 
			then
				p3="taskset -cp 6 $pid2"
			else
				p3="taskset -cp 5 $pid2"
			fi
			avablablebig=$(( $avablablebig - 1 ))
			f3round=$(( $f3round + 1 ))
		else
			if [ $avablablelittle -lt 3 ]  
			then
				p3="taskset -cp 2 $pid2"
			elif [ $avablablelittle -lt 2 ] 
			then
				p3="taskset -cp 3 $pid2"
			else
				p3="taskset -cp 1 $pid2"
			fi
			avablablelittle=$(( $avablablelittle - 1 ))
			s3round=$(( $s3round + 1 ))
		fi	
		fi	
	
		if [ ${#p4} -eq 0 ] && [ $(echo ${#pid3}) -gt 0 ]
		then
			if ([ $f4round -le $s4round ] && [ $f4round -lt $f4roundtotal ] && [ $avablablebig -gt 0 ]) || [ $avablablelittle -eq 0 ] 
			then
				if [ $avablablebig -lt 3 ]  
				then
					p4="taskset -cp 7 $pid3"
				elif [ $avablablebig -lt 2 ] 
				then
					p4="taskset -cp 6 $pid3"
				else
					p4="taskset -cp 5 $pid3"
				fi
				avablablebig=$(( $avablablebig - 1 ))
				f4round=$(( $f4round + 1 ))
			else
				if [ $avablablelittle -lt 3 ]  
				then
					p4="taskset -cp 2 $pid3"
				elif [ $avablablelittle -lt 2 ] 
				then
					p4="taskset -cp 3 $pid3"
				else
					p4="taskset -cp 1 $pid3"
				fi
				avablablelittle=$(( $avablablelittle - 1 ))
				s4round=$(( $s4round + 1 ))
			fi
		fi
		
		if [ ${#p5} -eq 0 ] && [ $(echo ${#pid4}) -gt 0 ]
		then
			if ([ $f5round -le $s5round ] && [ $f5round -lt $f5roundtotal ] && [ $avablablebig -gt 0 ]) || [ $avablablelittle -eq 0 ] 
			then
				if [ $avablablebig -lt 3 ]  
				then
					p5="taskset -cp 7 $pid4"
				elif [ $avablablebig -lt 2 ] 
				then
					p5="taskset -cp 6 $pid4"
				else
					p5="taskset -cp 5 $pid4"
				fi
				avablablebig=$(( $avablablebig - 1 ))
				f5round=$(( $f5round + 1 )) 
			else
				if [ $avablablelittle -lt 3 ]  
				then
					p5="taskset -cp 2 $pid4"
				elif [ $avablablelittle -lt 2 ] 
				then
					p5="taskset -cp 3 $pid4"
				else
					p5="taskset -cp 1 $pid4"
				fi
				avablablelittle=$(( $avablablelittle - 1 ))
				s5round=$(( $s5round + 1 )) 
			fi
		fi
		if [ ${#p6} -eq 0 ] && [ $(echo ${#pid5}) -gt 0 ]
		then
			if ([ $f6round -le $s6round ] && [ $f6round -lt $f6roundtotal ] && [ $avablablebig -gt 0 ]) || [ $avablablelittle -eq 0 ] 
			then
				if [ $avablablebig -lt 3 ]  
				then
					p6="taskset -cp 7 $pid5"
				elif [ $avablablebig -lt 2 ] 
				then
					p6="taskset -cp 6 $pid5"
				else
					p6="taskset -cp 5 $pid5"
				fi
				avablablebig=$(( $avablablebig - 1 ))
				f6round=$(( $f6round + 1 )) 
			else
				if [ $avablablelittle -lt 3 ]  
				then
					p6="taskset -cp 2 $pid5"
				elif [ $avablablelittle -lt 2 ] 
				then
					p6="taskset -cp 3 $pid5"
				else
					p6="taskset -cp 1 $pid5"
				fi
				avablablelittle=$(( $avablablelittle - 1 ))
				s6round=$(( $s6round + 1 )) 
			fi
		fi
		
		s2=$(($(date +%s%N)/1000000))
		DIFF1=$(($(( $s2 - $s1 ))))
		if [ $(echo ${#pid0}) -gt 0 ]
		then
			$p1
			echo $p1
		fi
		if [ $(echo ${#pid1}) -gt 0 ]
		then
			$p2
			echo $p2
		fi
		if [ $(echo ${#pid2}) -gt 0 ]
		then
			$p3
			echo $p3
		fi
		if [ $(echo ${#pid3}) -gt 0 ]
		then
			$p4
			echo $p4
		fi
		if [ $(echo ${#pid4}) -gt 0 ]
		then
			$p5
			echo $p5
		fi
		if [ $(echo ${#pid5}) -gt 0 ]
		then
			$p6
			echo $p6
		fi
		s3=$(($(date +%s%N)/1000000))
		DIFF2=$(($(( $s3 - $s2 ))))
		echo "$pcnt $i $j $DIFF1 $DIFF2"




	}






		pid0="$(pidof ${appnae1})"
		pid1="$(pidof ${appnae2})"
		pid2="$(pidof ${appnae3})"
		pid3="$(pidof ${appnae4})"
		pid4="$(pidof ${appnae5})"
		pid5="$(pidof ${appnae6})"
		
		pcnt=""
		if [ $(echo ${#pid0}) -gt 0 ]
		then
			pcnt=$(( $pcnt + 1 ))	
			curt=$(($(date +%s%N)/1000000))
			totaldur0=$(($(( $curt - t0 ))))
		fi
		if [ $(echo ${#pid1}) -gt 0 ]
		then
			pcnt=$(( $pcnt + 1 ))
			curt=$(($(date +%s%N)/1000000))
			totaldur1=$(($(( $curt - t1 ))))
		fi
		if [ $(echo ${#pid2}) -gt 0 ]
		then
			pcnt=$(( $pcnt + 1 )) 
			curt=$(($(date +%s%N)/1000000))
			totaldur2=$(($(( $curt - t2 ))))
		fi
		if [ $(echo ${#pid3}) -gt 0 ]
		then
			pcnt=$(( $pcnt + 1 )) 
			curt=$(($(date +%s%N)/1000000))
			totaldur3=$(($(( $curt - t3 ))))
		fi
		if [ $(echo ${#pid4}) -gt 0 ]
		then
			pcnt=$(( $pcnt + 1 )) 
			curt=$(($(date +%s%N)/1000000))
			totaldur4=$(($(( $curt - t4 ))))
		fi
		if [ $(echo ${#pid5}) -gt 0 ]
		then
			pcnt=$(( $pcnt + 1 )) 
			curt=$(($(date +%s%N)/1000000))
			totaldur5=$(($(( $curt - t5 ))))
		fi

		A7_W=`cat /sys/bus/i2c/drivers/INA231/0-0045/sensor_W`
		A15_W=`cat /sys/bus/i2c/drivers/INA231/0-0040/sensor_W`

		prevedp=$curtedp
		curtedp=$(($(date +%s%N)/1000000))		
		curedp=$(echo "scale=2; $(echo "scale=2; $(( $curtedp-$prevedp ))/1000" | bc)*$(echo "scale=2; $A7_W+$A15_W" | bc)" | bc)
		EDP=$(echo "scale=2; $EDP+$curedp" | bc)

	done	
	pd0="$(echo "scale=2; $(( $rt0 ))/$(( $totaldur0 ))" | bc)"
	pd1="$(echo "scale=2; $(( $rt1 ))/$(( $totaldur1 ))" | bc)"
	pd2="$(echo "scale=2; $(( $rt2 ))/$(( $totaldur2 ))" | bc)"
	pd3="$(echo "scale=2; $(( $rt3 ))/$(( $totaldur3 ))" | bc)"
	pd4="$(echo "scale=2; $(( $rt4 ))/$(( $totaldur4 ))" | bc)"
	pd5="$(echo "scale=2; $(( $rt5 ))/$(( $totaldur5 ))" | bc)"

	uniformity="$(./cluni 6 $pd0 $pd1 $pd2 $pd3 $pd4 $pd5)"
	echo " tr1 $cnt  ${EDP} $rt0 $rt1 $rt2 $rt3 $rt4 $rt5 ${totaldur0} ${totaldur1} ${totaldur2} ${totaldur3} ${totaldur4} ${totaldur5} $pd0 $pd1 $pd2 $pd3 $pd4 $pd5 $uniformity" >> salamioutput/rescmp.log
	cnt=$(( $cnt + 1 ))
done
