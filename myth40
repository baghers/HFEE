avgips0=1933894742
avgips1=1607103149
avgips2=192636435
avgips3=1966248105

eer0=0
eer1=0.43
eer2=1
eer3=0.41

echo 1 > /sys/bus/i2c/drivers/INA231/0-0045/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0040/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0041/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0044/enable



echo userspace >/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu3/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu4/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu5/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu6/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu7/cpufreq/scaling_governor
echo 2
echo 1400000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu3/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu4/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu5/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu6/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu7/cpufreq/scaling_max_freq
echo 3
echo 1400000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu1/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu3/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu4/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu5/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu6/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu7/cpufreq/scaling_min_freq
echo 4
cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_cur_freq

pid0="$(pidof hmmer_base.ArmLinuxGnuAbi-)"
pid1="$(pidof bzip2_base.ArmLinuxGnuAbi-)"
pid2="$(pidof mcf_base.ArmLinuxGnuAbi-)"
pid3="$(pidof h264ref_base.ArmLinuxGnuAbi-)"

#####################kill previous processes
if [ $(echo ${#pid0}) -gt 0 ]
then
	kill $pid0
fi
if [ $(echo ${#pid1}) -gt 0 ]
then
	kill $pid1
fi
if [ $(echo ${#pid2}) -gt 0 ]
then
	kill $pid2
fi
if [ $(echo ${#pid3}) -gt 0 ]
then
	kill $pid3
fi
#####################
	

./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/hmmer_base.ArmLinuxGnuAbi-  --num 50000 ./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/nph3.hmm &	
t0=$(($(date +%s%N)/1000000))

./spec/CPU2006/401.bzip2/run/run_base_ref_ArmLinuxGnuAbi-.0000/bzip2_base.ArmLinuxGnuAbi- ./spec/CPU2006/401.bzip2/run/run_base_ref_ArmLinuxGnuAbi-.0000/input.program & 
t1=$(($(date +%s%N)/1000000))

./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err &
t2=$(($(date +%s%N)/1000000))

./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/h264ref_base.ArmLinuxGnuAbi- -d ./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/foreman_ref_encoder_main.cfg & 
t3=$(($(date +%s%N)/1000000))

pid0="$(pidof hmmer_base.ArmLinuxGnuAbi-)"
pid1="$(pidof bzip2_base.ArmLinuxGnuAbi-)"
pid2="$(pidof mcf_base.ArmLinuxGnuAbi-)"
pid3="$(pidof h264ref_base.ArmLinuxGnuAbi-)"

taskset -cp 3 $pid0
af0=3
taskset -cp 7 $pid1
af1=7
taskset -cp 6 $pid2
af2=6
taskset -cp 2 $pid3
af3=2

pcnt=4
prevt0=$t0
prevt1=$t1
prevt2=$t2
prevt3=$t3
totalins0=0
totalins1=0
totalins2=0
totalins3=0
totaldur0=0
totaldur1=0
totaldur2=0
totaldur3=0
while [ $(echo ${#pcnt}) -gt 0 ]
do
	p0=""
	p1=""
	p2=""
	p3=""
	avablablebig=2
	avablablelittle=2
	pid0="$(pidof hmmer_base.ArmLinuxGnuAbi-)"
	pid1="$(pidof bzip2_base.ArmLinuxGnuAbi-)"
	pid2="$(pidof mcf_base.ArmLinuxGnuAbi-)"
	pid3="$(pidof h264ref_base.ArmLinuxGnuAbi-)"
	
	if [ $(echo ${#pid0}) -gt 0 ]
	then
		if [ $af0 != 2 ] && [ $af0 != 3 ]
		then
			pcname="armv7_cortex_a15/inst_retired/"
		else
			pcname="armv7_cortex_a7/inst_retired/"
		fi

		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e ${pcname}  -C ${af0} sleep 0.1 2>&1`
		s2=$(($(date +%s%N)/1000000))
		DIFF0b=$(($(( $s2 - $s1 ))))
		v0="${af0}':"
		v7="${pcname}"
		rest0=${poutput#*$v0}
		rest7=${poutput#*$v7}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		instructions0b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions0b="$(echo "${instructions0b//,}")"
		curt=$(($(date +%s%N)/1000000))		
		dur=$(( $curt-$prevt0 ))
		instructions0b=$(( $instructions0b*$dur ))
		instructions0b=$(( $instructions0b/$DIFF0b ))
		prevt0=$curt
		totalins0=$(( $totalins0 + $instructions0b ))
		totaldur0=$(($(( $curt - t0 ))))
		progress0="$(echo "scale=2; $(( $totalins0*1000 ))/$(( $avgips0*$totaldur0 ))" | bc)"
		score0=$eer0
		echo  $score0

	fi
	if [ $(echo ${#pid1}) -gt 0 ]
	then
		if [ $af1 != 2 ] && [ $af1 != 3 ]
		then
			pcname="armv7_cortex_a15/inst_retired/"
		else
			pcname="armv7_cortex_a7/inst_retired/"
		fi
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e ${pcname}  -C ${af1} sleep 0.1 2>&1`
		s2=$(($(date +%s%N)/1000000))
		DIFF0b=$(($(( $s2 - $s1 ))))
		v0="${af1}':"
		v7="${pcname}"
		rest0=${poutput#*$v0}
		rest7=${poutput#*$v7}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		instructions0b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions0b="$(echo "${instructions0b//,}")"
		curt=$(($(date +%s%N)/1000000))		
		dur=$(( $curt-$prevt1 ))
		instructions0b=$(( $instructions0b*$dur ))
		instructions0b=$(( $instructions0b/$DIFF0b ))
		prevt1=$curt
		totalins1=$(( $totalins1 + $instructions0b ))
		totaldur1=$(($(( $curt - t1 ))))
		progress1="$(echo "scale=2; $(( $totalins1*1000 ))/$(( $avgips1*$totaldur1 ))" | bc)"
		
		score1=$eer1
		echo  $score1
	fi	
	if [ $(echo ${#pid2}) -gt 0 ]
	then
		if [ $af2 != 2 ] && [ $af2 != 3 ]
		then
			pcname="armv7_cortex_a15/inst_retired/"
		else
			pcname="armv7_cortex_a7/inst_retired/"
		fi
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e ${pcname}  -C ${af2} sleep 0.1 2>&1`
		s2=$(($(date +%s%N)/1000000))
		DIFF0b=$(($(( $s2 - $s1 ))))
		v0="${af2}':"
		v7="${pcname}"
		rest0=${poutput#*$v0}
		rest7=${poutput#*$v7}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		instructions0b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions0b="$(echo "${instructions0b//,}")"
		curt=$(($(date +%s%N)/1000000))		
		dur=$(( $curt-$prevt2 ))
		instructions0b=$(( $instructions0b*$dur ))
		instructions0b=$(( $instructions0b/$DIFF0b ))
		prevt2=$curt
		totalins2=$(( $totalins2 + $instructions0b ))
		totaldur2=$(($(( $curt - t2 ))))
		progress2="$(echo "scale=2; $(( $totalins2*1000 ))/$(( $avgips2*$totaldur2 ))" | bc)"
		score2=$eer2
		echo  $score2
	fi	
	if [ $(echo ${#pid3}) -gt 0 ]
	then
		if [ $af3 != 2 ] && [ $af3 != 3 ]
		then
			pcname="armv7_cortex_a15/inst_retired/"
		else
			pcname="armv7_cortex_a7/inst_retired/"
		fi
		s1=$(($(date +%s%N)/1000000))
		poutput=`perf stat -B -e ${pcname}  -C ${af3} sleep 0.1 2>&1`
		s2=$(($(date +%s%N)/1000000))
		DIFF0b=$(($(( $s2 - $s1 ))))
		v0="${af3}':"
		v7="${pcname}"
		rest0=${poutput#*$v0}
		rest7=${poutput#*$v7}
		p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
		instructions0b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
		instructions0b="$(echo "${instructions0b//,}")"
		curt=$(($(date +%s%N)/1000000))		
		dur=$(( $curt-$prevt3 ))
		instructions0b=$(( $instructions0b*$dur ))
		instructions0b=$(( $instructions0b/$DIFF0b ))
		prevt3=$curt
		totalins3=$(( $totalins3 + $instructions0b ))
		totaldur3=$(($(( $curt - t3 ))))
		progress3="$(echo "scale=2; $(( $totalins3*1000 ))/$(( $avgips3*$totaldur3 ))" | bc)"
		score3=$eer3
		echo  $score3
	fi
	##########################
	pcnt=""
	apid0=""
	apid1=""
	apid2=""
	apid3=""
	if [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#pid3}) -gt 0 ]
	then
		apid0=$pid0
		apid1=$pid1
		apid2=$pid2
		apid3=$pid3
		pcnt=4
		ascore0=$score0
		ascore1=$score1
		ascore2=$score2
		ascore3=$score3
		elif [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#pid3}) -eq 0 ]
		then
			apid0=$pid0
			apid1=$pid1
			apid2=$pid2
			apid3=""
			pcnt=3
			ascore0=$score0
			ascore1=$score1
			ascore2=$score2
			ascore3="-1"
			elif [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#pid2}) -eg 0 ] && [ $(echo ${#pid3}) -gt 0 ]
				then
					apid0=$pid0
					apid1=$pid1
					apid2=$pid3
					apid3=""
					pcnt=3
					ascore0=$score0
					ascore1=$score1
					ascore2=$score3
					ascore3="-1"
					elif [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#pid2}) -eq 0 ] && [ $(echo ${#pid3}) -eq 0 ]
						then
							apid0=$pid0
							apid1=$pid1
							apid2=""
							apid3=""
							pcnt=2
							ascore0=$score0
							ascore1=$score1
							ascore2="-1"
							ascore3="-1"
							elif [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#pid1}) -eq 0 ] && [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#pid3}) -gt 0 ]
								then
									apid0=$pid0
									apid1=$pid2
									apid2=$pid3
									apid3=""
									pcnt=3
									ascore0=$score0
									ascore1=$score2
									ascore2=$score3
									ascore3="-1"
									elif [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#pid1}) -eq 0 ] && [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#pid3}) -eq 0 ]
										then
											apid0=$pid0
											apid1=$pid2
											apid2=""
											apid3=""
											pcnt=2
											ascore0=$score0
											ascore1=$score2
											ascore2="-1"
											ascore3="-1"
											elif [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#pid1}) -eq 0 ] && [ $(echo ${#pid2}) -eq 0 ] && [ $(echo ${#pid3}) -gt 0 ]
												then
													apid0=$pid0
													apid1=$pid3
													apid2=""
													apid3=""
													pcnt=2
													ascore0=$score0
													ascore1=$score3
													ascore2="-1"
													ascore3="-1"
													elif [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#pid1}) -eq 0 ] && [ $(echo ${#pid2}) -eq 0 ] && [ $(echo ${#pid3}) -eq 0 ]
														then
															apid0=$pid0
															apid1=""
															apid2=""
															apid3=""
															pcnt=1
															ascore0=$score0
															ascore1="-1"
															ascore2="-1"
															ascore3="-1"
	elif [ $(echo ${#pid0}) -eq 0 ] && [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#pid3}) -gt 0 ]
	then
		apid0=$pid1
		apid1=$pid2
		apid2=$pid3
		apid3=""
		pcnt=3
		ascore0=$score1
		ascore1=$score2
		ascore2=$score3
		ascore3="-1"
		elif [ $(echo ${#pid0}) -eq 0 ] && [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#pid3}) -eq 0 ]
		then
			apid0=$pid1
			apid1=$pid2
			apid2="-1"
			apid3=""
			pcnt=2
			ascore0=$score1
			ascore1=$score2
			ascore2="-1"
			ascore3="-1"
			elif [ $(echo ${#pid0}) -eq 0 ] && [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#pid2}) -eg 0 ] && [ $(echo ${#pid3}) -gt 0 ]
				then
					apid0=$pid1
					apid1=$pid3
					apid2=""
					apid3=""
					pcnt=2
					ascore0=$score1
					ascore1=$score3
					ascore2="-1"
					ascore3="-1"
					elif [ $(echo ${#pid0}) -eq 0 ] && [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#pid2}) -eq 0 ] && [ $(echo ${#pid3}) -eq 0 ]
						then
							apid0=$pid1
							apid1=""
							apid2=""
							apid3=""
							pcnt=1
							ascore0=$score1
							ascore1="-1"
							ascore2="-1"
							ascore3="-1"
							elif [ $(echo ${#pid0}) -eq 0 ] && [ $(echo ${#pid1}) -eq 0 ] && [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#pid3}) -gt 0 ]
								then
									apid0=$pid2
									apid1=$pid3
									apid2=""
									apid3=""
									pcnt=2
									ascore0=$score2
									ascore1=$score3
									ascore2="-1"
									ascore3="-1"
									elif [ $(echo ${#pid0}) -eq 0 ] && [ $(echo ${#pid1}) -eq 0 ] && [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#pid3}) -eq 0 ]
										then
											apid0=$pid2
											apid1=""
											apid2=""
											apid3=""
											pcnt=1
											ascore0=$score2
											ascore1="-1"
											ascore2="-1"
											ascore3="-1"
											elif [ $(echo ${#pid0}) -eq 0 ] && [ $(echo ${#pid1}) -eq 0 ] && [ $(echo ${#pid2}) -eq 0 ] && [ $(echo ${#pid3}) -gt 0 ]
												then
													apid0=$pid3
													apid1=""
													apid2=""
													apid3=""
													pcnt=1
													ascore0=$score3
													ascore1="-1"
													ascore2="-1"
													ascore3="-1"
													elif [ $(echo ${#pid0}) -eq 0 ] && [ $(echo ${#pid1}) -eq 0 ] && [ $(echo ${#pid2}) -eq 0 ] && [ $(echo ${#pid3}) -eq 0 ]
														then
															apid0=""
															apid1=""
															apid2=""
															apid3=""
															pcnt=""
															ascore0="-1"
															ascore1="-1"
															ascore2="-1"
															ascore3="-1"
	fi
	##########################
	if [ $pcnt -gt 3 ]
	then
		if (( $(echo "$ascore0 >= $ascore2" |bc -l) )) && (( $(echo "$ascore0 >= $ascore3" |bc -l) ))  && (( $(echo "$ascore1 >= $ascore2" |bc -l) )) && (( $(echo "$ascore1 >= $ascore3" |bc -l) ))
	then
		aaf0=6
		aaf1=7
		aaf2=2
		aaf3=3
		echo "s1 0 1"
		elif (( $(echo "$ascore0 >= $ascore1" |bc -l) )) && (( $(echo "$ascore0 >= $ascore3" |bc -l) ))  && (( $(echo "$ascore2 >= $ascore1" |bc -l) )) && (( $(echo "$ascore2 >= $ascore3" |bc -l) ))
	then
		aaf0=6
		aaf1=2
		aaf2=7
		aaf3=3
		echo "s2 0 2"
		elif (( $(echo "$ascore0 >= $ascore1" |bc -l) )) && (( $(echo "$ascore0 >= $ascore2" |bc -l) ))  && (( $(echo "$ascore3 >= $ascore1" |bc -l) )) && (( $(echo "$ascore3 >= $ascore2" |bc -l) ))
	then
		aaf0=6
		aaf1=2
		aaf2=3
		aaf3=7
		echo "s3 0 3"
		elif (( $(echo "$ascore1 >= $ascore0" |bc -l) )) && (( $(echo "$ascore1 >= $ascore3" |bc -l) ))  && (( $(echo "$ascore2 >= $ascore0" |bc -l) )) && (( $(echo "$ascore2 >= $ascore3" |bc -l) ))
	then
		aaf0=2
		aaf1=6
		aaf2=7
		aaf3=3
		echo "s4 1 2"
		elif (( $(echo "$ascore1 >= $ascore0" |bc -l) )) && (( $(echo "$ascore1 >= $ascore2" |bc -l) ))  && (( $(echo "$ascore3 >= $ascore0" |bc -l) )) && (( $(echo "$ascore3 >= $ascore2" |bc -l) ))
	then
		aaf0=2
		aaf1=6
		aaf2=3
		aaf3=7
		echo "s5 1 3"
		else
			aaf0=2
			aaf1=3
			aaf2=6
			aaf3=7
			echo "s6 2 3"
	fi
	elif [ $pcnt -gt 2 ]
	then
		if (( $(echo "$ascore0 <= $ascore1" |bc -l) )) && (( $(echo "$ascore0 <= $ascore2" |bc -l) )) 
		then
			aaf0=2
			aaf1=6
			aaf2=7
			aaf3=-1
			echo "s7 1 2"
		elif (( $(echo "$ascore1 <= $ascore0" |bc -l) )) && (( $(echo "$ascore1 <= $ascore2" |bc -l) )) 
		then
			aaf0=6
			aaf1=2
			aaf2=7
			aaf3=-1
			echo "s8 0 2"
		else
			aaf0=6
			aaf1=7
			aaf2=2
			aaf3=-1
			echo "s9 0 1"
		fi
	elif [ $pcnt -gt 1 ]
	then
			aaf0=6
			aaf1=7
			aaf2=-1
			aaf3=-1
		echo "s10 0 1"	
		else
			aaf0=6
			aaf1=-1
			aaf2=-1
			aaf3=-1
			echo "s11 0"
	fi



	if [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#apid0}) -gt 0 ]; then
	if [ $apid0 -eq $pid0 ]
	then
		af0=$aaf0
	fi
	fi	
if [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#apid0}) -gt 0 ]; then
	if [ $apid0 -eq $pid1 ]
	then
		af1=$aaf0
	fi
	fi	
if [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#apid0}) -gt 0 ]; then
	if [ $apid0 -eq $pid2 ]
	then
		af2=$aaf0
	fi	
	fi	
if [ $(echo ${#pid3}) -gt 0 ] && [ $(echo ${#apid0}) -gt 0 ]; then
	if [ $apid0 -eq $pid3 ]
	then
		af3=$aaf0
	fi	
	fi	
if [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#apid1}) -gt 0 ]; then
	if [ $apid1 -eq $pid0 ]
	then
		af0=$aaf1
	fi
	fi	
if [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#apid1}) -gt 0 ]; then
	if [ $apid1 -eq $pid1 ]
	then
		af1=$aaf1
	fi
	fi	
if [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#apid1}) -gt 0 ]; then
	if [ $apid1 -eq $pid2 ]
	then
		af2=$aaf1
	fi	
	fi	
if [ $(echo ${#pid3}) -gt 0 ] && [ $(echo ${#apid1}) -gt 0 ]; then
	if [ $apid1 -eq $pid3 ]
	then
		af3=$aaf1
	fi	
	fi	
if [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#apid2}) -gt 0 ]; then
	if [ $apid2 -eq $pid0 ]
	then
		af0=$aaf2
	fi
	fi	
if [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#apid2}) -gt 0 ]; then
	if [ $apid2 -eq $pid1 ]
	then
		af1=$aaf2
	fi
	fi	
if [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#apid2}) -gt 0 ]; then
	if [ $apid2 -eq $pid2 ]
	then
		af2=$aaf2
	fi	
	fi	
if [ $(echo ${#pid3}) -gt 0 ] && [ $(echo ${#apid2}) -gt 0 ]; then
	if [ $apid2 -eq $pid3 ]
	then
		af3=$aaf2
	fi	
	fi	
if [ $(echo ${#pid0}) -gt 0 ] && [ $(echo ${#apid3}) -gt 0 ]; then
	if [ $apid3 -eq $pid0 ]
	then
		af0=$aaf3
	fi
	fi	
if [ $(echo ${#pid1}) -gt 0 ] && [ $(echo ${#apid3}) -gt 0 ]; then
	if [ $apid3 -eq $pid1 ]
	then
		af1=$aaf3
	fi
	fi	
if [ $(echo ${#pid2}) -gt 0 ] && [ $(echo ${#apid3}) -gt 0 ]; then
	if [ $apid3 -eq $pid2 ]
	then
		af2=$aaf3
	fi	
	fi	
if [ $(echo ${#pid3}) -gt 0 ] && [ $(echo ${#apid3}) -gt 0 ]; then
	if [ $apid3 -eq $pid3 ]
	then
		af3=$aaf3
	fi	
	fi	


	if [ $(echo ${#pid0}) -gt 0 ]
	then
		if [ $oldaf0 -ne $af0 ]
		then
			taskset -cp $af0 $pid0
		fi
	fi
	if [ $(echo ${#pid1}) -gt 0 ]
	then
		if [ $oldaf1 -ne $af1 ]
		then
			taskset -cp $af1 $pid1
		fi
	fi
	if [ $(echo ${#pid2}) -gt 0 ]
	then
		if [ $oldaf2 -ne $af2 ]
		then
			taskset -cp $af2 $pid2
		fi
	fi
	if [ $(echo ${#pid3}) -gt 0 ]
	then
		if [ $oldaf3 -ne $af3 ]
		then
			taskset -cp $af3 $pid3
		fi
	fi


	oldaf0=$af0
	oldaf1=$af1
	oldaf2=$af2
	oldaf3=$af3



	CPU0_FREQ=$((`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq`/1000))
	CPU4_FREQ=$((`cat /sys/devices/system/cpu/cpu4/cpufreq/scaling_cur_freq`/1000))
	A7_W=`cat /sys/bus/i2c/drivers/INA231/0-0045/sensor_W`
	A15_W=`cat /sys/bus/i2c/drivers/INA231/0-0040/sensor_W`
	echo "${j} $(date +'%H:%M:%S') ${CPU0_FREQ} ${CPU4_FREQ} ${A7_W} ${A15_W} -$pid0 -$pid1 -$pid2 -$pid3 -${totalins0} -${totalins1} -${totalins2} -${totalins3} -$totaldur0 -$totaldur1 -$totaldur2 -$totaldur3 -$af0 -$af1 -$af2 -$af3 -$progress0 -$progress1 -$progress2 -$progress3 -$score0 -$score1 -$score2 -$score3" >> resmyth40.log
	sleep 1s

done

