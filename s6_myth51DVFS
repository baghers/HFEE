

echo 1 > /sys/bus/i2c/drivers/INA231/0-0045/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0040/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0041/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0044/enable



echo userspace >/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu3/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu4/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu5/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu6/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu7/cpufreq/scaling_governor

echo 1400000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu3/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu4/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu5/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu6/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu7/cpufreq/scaling_max_freq

echo 1400000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu1/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu3/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu4/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu5/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu6/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu7/cpufreq/scaling_min_freq

cnt=1
while [ $cnt -lt 16 ]
do
	if [ $cnt -eq 1 ]
	then
		rt0=3279 
		rt1=4661 
		rt2=92563 
		rt3=120528 
		rt4=51877  
		rt5=12436

		avgips0=218928005  
		avgips1=219208260  
		avgips2=229857935  
		avgips3=883221648  
		avgips4=1221367950  
		avgips5=1225674924  

		eer0=0.92
		eer1=0.89
		eer2=1.80
		eer3=1.12
		eer4=1.08
		eer5=1.30
 
		appnae1="specrand_base.arm"
		appnae2="specrand999"
		appnae3="mcf_base.ArmLinuxGnuAbi-"
		appnae4="perlbench_base.ArmLinuxGnuAbi-"
		appnae5="omnetpp_base.arm"
		appnae6="astar_base.arm"
			
		./spec/CPU2006/998.specrand/specrand_base.arm 9242 39332 spec/CPU2006/998.specrand/res.out 2> spec/CPU2006/998.specrand/res.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/999.specrand/specrand999 9242 39332 spec/CPU2006/999.specrand/res.out 2> spec/CPU2006/999.specrand/res.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/473.astar/astar_base.arm spec/CPU2006/473.astar/lake.cfg > spec/CPU2006/473.astar/astar.out 2> spec/CPU2006/473.astar/astar.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 2 ]
	then
		rt0=63778
		rt1=435498 
		rt2=42445 
		rt3=47497 
		rt4=88130  
		rt5=200896

		avgips0=1214322619   
		avgips1=1369214639  
		avgips2=1380937043   
		avgips3=1460850171   
		avgips4=1475138112   
		avgips5=1488867903  

		eer0=1.31
		eer1=1.25
		eer2=1.09
		eer3=0.96
		eer4=0.97
		eer5=1.08
 
		appnae1="gobmk_base.arm"
		appnae2="sjeng_base.arm"
		appnae3="GemsFDTD_base.arm"
		appnae4="povray_base.arm"
		appnae5="milc_base.arm"
		appnae6="cactusADM_base.arm"
			
		./spec/CPU2006/445.gobmk/gobmk_base.arm --quiet --mode gtp < spec/CPU2006/445.gobmk/dniwog.tst > spec/CPU2006/445.gobmk/gobmk.reff.score2.out 2> spec/CPU2006/445.gobmk/gobmk.ref.score2.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/458.sjeng/sjeng_base.arm spec/CPU2006/458.sjeng/ref.txt > spec/CPU2006/458.sjeng/sjeng.ref.out 2> spec/CPU2006/458.sjeng/sjeng.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/459.GemsFDTD/GemsFDTD_base.arm > spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.out 2> spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/436.cactusADM/cactusADM_base.arm spec/CPU2006/436.cactusADM/benchADM.par > spec/CPU2006/436.cactusADM/cactusADM.ref.out 2> spec/CPU2006/436.cactusADM/cactusADM.ref.err & 
		t5=$(($(date +%s%N)/1000000))	
	elif [ $cnt -eq 3 ]
	then
		rt0=66360
		rt1=251564 
		rt2=34253 
		rt3=7139 
		rt4=29643  
		rt5=98751

		avgips0=1543005401    
		avgips1=1558655713   
		avgips2=1612274795    
		avgips3=1621213004    
		avgips4=1621409626    
		avgips5=1701625147   

		eer0=1.26
		eer1=0.97
		eer2=0.96
		eer3=1.30
		eer4=1.06
		eer5=1.05
 
		appnae1="bzip2_base.ArmLinuxGnuAbi-"
		appnae2="gamess_base.arm"
		appnae3="calculix_base.arm"
		appnae4="Xalan_base.arm"
		appnae5="tonto_base.arm"
		appnae6="zeusmp_base.arm"
			
		./spec/CPU2006/401.bzip2/run/run_base_ref_ArmLinuxGnuAbi-.0000/bzip2_base.ArmLinuxGnuAbi- ./spec/CPU2006/401.bzip2/run/run_base_ref_ArmLinuxGnuAbi-.0000/input.program &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/416.gamess/gamess_base.arm < spec/CPU2006/416.gamess/cytosine.2.config > gamess.ref.cytosine.out 2> gamess.ref.cytosine.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/454.calculix/calculix_base.arm -i stairs > calculix.ref.out 2> calculix.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/483.xalancbmk/Xalan_base.arm -v spec/CPU2006/483.xalancbmk/test.xml spec/CPU2006/483.xalancbmk/xalanc.xsl &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/465.tonto/tonto_base.arm > spec/CPU2006/465.tonto/tonto.ref.out 2> spec/CPU2006/465.tonto/tonto.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/434.zeusmp/zeusmp_base.arm > zeusmp.ref.out 2> zeusmp.ref.err & 
		t5=$(($(date +%s%N)/1000000))	
	elif [ $cnt -eq 4 ]
	then
		rt0=34848
		rt1=139759 
		rt2=214224 
		rt3=191415 
		rt4=92563  
		rt5=120528

		avgips0=1905759519     
		avgips1=1934815242    
		avgips2=1080145489      
		avgips3=1206609988      
		avgips4=229857935     
		avgips5=883221648    

		eer0=2.12
		eer1=1.27
		eer2=1.13
		eer3=1.31
		eer4=1.80
		eer5=1.12
 
		appnae1="libquantum_base.arm"
		appnae2="h264ref_base.ArmLinuxGnuAbi-"
		appnae3="gcc_base.arm"
		appnae4="soplex_base.arm"
		appnae5="mcf_base.ArmLinuxGnuAbi-"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/462.libquantum/libquantum_base.arm 250 8 > spec/CPU2006/462.libquantum/libquantum.ref.out 2> spec/CPU2006/462.libquantum/libquantum.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/h264ref_base.ArmLinuxGnuAbi- -d ./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/foreman_ref_encoder_main.cfg &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/403.gcc/gcc_base.arm spec/CPU2006/403.gcc/200.i -o spec/CPU2006/403.gcc/200.s > spec/CPU2006/403.gcc/gcc.ref.200.out 2> spec/CPU2006/403.gcc/gcc.ref.200.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/450.soplex/soplex_base.arm -s1 -e -m15000 spec/CPU2006/450.soplex/pds-20.mps > spec/CPU2006/450.soplex/soplex.ref.pds-20.out 2> spec/CPU2006/450.soplex/soplex.ref.pds20.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 5 ]
	then
		rt0=160751
		rt1=98751 
		rt2=188156 
		rt3=210945 
		rt4=47497  
		rt5=120528

		avgips0=1776460007      
		avgips1=1701625147     
		avgips2=1799406948       
		avgips3=1880393579       
		avgips4=1460850171      
		avgips5=883221648     

		eer0=1.27
		eer1=1.05
		eer2=1.02
		eer3=1.04
		eer4=0.96
		eer5=1.12
 
		appnae1="leslie3d_base.arm"
		appnae2="zeusmp_base.arm"
		appnae3="lbm_base.arm"
		appnae4="hmmer_base.ArmLinuxGnuAbi-"
		appnae5="povray_base.arm"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/437.leslie3d/leslie3d_base.arm < spec/CPU2006/437.leslie3d/leslie3d.in > spec/CPU2006/437.leslie3d/leslie3d.ref.out 2> spec/CPU2006/437.leslie3d/leslie3d.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/434.zeusmp/zeusmp_base.arm > zeusmp.ref.out 2> zeusmp.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/470.lbm/lbm_base.arm 30 spec/CPU2006/470.lbm/reference.dat 0 0 spec/CPU2006/470.lbm/100_100_130_ldc.of > spec/CPU2006/470.lbm/lbm.ref.out 2> spec/CPU2006/470.lbm/lbm.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/hmmer_base.ArmLinuxGnuAbi-  --num 50000 ./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/nph3.hmm &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 6 ]
	then
		rt0=40342
		rt1=127320 
		rt2=160751 
		rt3=98751 
		rt4=188156  
		rt5=120528

		avgips0=1761880491       
		avgips1=1775008158      
		avgips2=1776460007        
		avgips3=1701625147        
		avgips4=1799406948       
		avgips5=883221648      

		eer0=0.91
		eer1=1.12
		eer2=1.27
		eer3=1.05
		eer4=1.02
		eer5=1.12
 
		appnae1="gromacs"
		appnae2="bwaves_base.arm"
		appnae3="leslie3d_base.arm"
		appnae4="zeusmp_base.arm"
		appnae5="lbm_base.arm"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/435.gromacs/gromacs -silent -deffnm gromacs -nice 0 > gromacs.ref.out 2> gromacs.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/410.bwaves/bwaves_base.arm bwaves.in > bwaves.out 2> bwaves.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/437.leslie3d/leslie3d_base.arm < spec/CPU2006/437.leslie3d/leslie3d.in > spec/CPU2006/437.leslie3d/leslie3d.ref.out 2> spec/CPU2006/437.leslie3d/leslie3d.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/434.zeusmp/zeusmp_base.arm > zeusmp.ref.out 2> zeusmp.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/470.lbm/lbm_base.arm 30 spec/CPU2006/470.lbm/reference.dat 0 0 spec/CPU2006/470.lbm/100_100_130_ldc.of > spec/CPU2006/470.lbm/lbm.ref.out 2> spec/CPU2006/470.lbm/lbm.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))	
	elif [ $cnt -eq 7 ]
	then
		rt0=210945
		rt1=34848 
		rt2=139759 
		rt3=47497 
		rt4=88130  
		rt5=200896

		avgips0=1880393579        
		avgips1=1905759519       
		avgips2=1934815242         
		avgips3=1460850171         
		avgips4=1475138112        
		avgips5=1488867903       

		eer0=1.04
		eer1=2.12
		eer2=1.27
		eer3=0.96
		eer4=0.97
		eer5=1.08
 
		appnae1="hmmer_base.ArmLinuxGnuAbi-"
		appnae2="libquantum_base.arm"
		appnae3="h264ref_base.ArmLinuxGnuAbi-"
		appnae4="povray_base.arm"
		appnae5="milc_base.arm"
		appnae6="cactusADM_base.arm"
			
		./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/hmmer_base.ArmLinuxGnuAbi-  --num 50000 ./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/nph3.hmm &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/462.libquantum/libquantum_base.arm 250 8 > spec/CPU2006/462.libquantum/libquantum.ref.out 2> spec/CPU2006/462.libquantum/libquantum.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/h264ref_base.ArmLinuxGnuAbi- -d ./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/foreman_ref_encoder_main.cfg &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/436.cactusADM/cactusADM_base.arm spec/CPU2006/436.cactusADM/benchADM.par > spec/CPU2006/436.cactusADM/cactusADM.ref.out 2> spec/CPU2006/436.cactusADM/cactusADM.ref.err & 
		t5=$(($(date +%s%N)/1000000))	
	elif [ $cnt -eq 8 ]
	then
		rt0=7139
		rt1=191415 
		rt2=42445 
		rt3=47497 
		rt4=88130  
		rt5=120528

		avgips0=1621213004         
		avgips1=1206609988        
		avgips2=1380937043          
		avgips3=1460850171         
		avgips4=1475138112        
		avgips5=883221648        

		eer0=1.30
		eer1=1.31
		eer2=1.09
		eer3=0.96
		eer4=0.97
		eer5=1.12
 
		appnae1="Xalan_base.arm"
		appnae2="soplex_base.arm"
		appnae3="GemsFDTD_base.arm"
		appnae4="povray_base.arm"
		appnae5="milc_base.arm"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/483.xalancbmk/Xalan_base.arm -v spec/CPU2006/483.xalancbmk/test.xml spec/CPU2006/483.xalancbmk/xalanc.xsl &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/450.soplex/soplex_base.arm -s1 -e -m15000 spec/CPU2006/450.soplex/pds-20.mps > spec/CPU2006/450.soplex/soplex.ref.pds-20.out 2> spec/CPU2006/450.soplex/soplex.ref.pds20.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/459.GemsFDTD/GemsFDTD_base.arm > spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.out 2> spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 9 ]
	then
		rt0=42445
		rt1=47497 
		rt2=88130 
		rt3=51877 
		rt4=92563  
		rt5=120528

		avgips0=1380937043          
		avgips1=1460850171         
		avgips2=1475138112           
		avgips3=1221367950          
		avgips4=229857935         
		avgips5=883221648         

		eer0=1.09
		eer1=0.96
		eer2=0.97
		eer3=1.08
		eer4=1.80
		eer5=1.12
 
		appnae1="GemsFDTD_base.arm"
		appnae2="povray_base.arm"
		appnae3="milc_base.arm"
		appnae4="omnetpp_base.arm"
		appnae5="mcf_base.ArmLinuxGnuAbi-"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/459.GemsFDTD/GemsFDTD_base.arm > spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.out 2> spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 10 ]
	then
		rt0=200896
		rt1=42445 
		rt2=47497 
		rt3=88130 
		rt4=120528  
		rt5=51877

		avgips0=1488867903           
		avgips1=1380937043          
		avgips2=1460850171            
		avgips3=1475138112           
		avgips4=883221648          
		avgips5=1221367950          

		eer0=1.08
		eer1=1.09
		eer2=0.96
		eer3=0.97
		eer4=1.12
		eer5=1.08
 
		appnae1="cactusADM_base.arm"
		appnae2="GemsFDTD_base.arm"
		appnae3="povray_base.arm"
		appnae4="milc_base.arm"
		appnae5="perlbench_base.ArmLinuxGnuAbi-"
		appnae6="omnetpp_base.arm"
			
		./spec/CPU2006/436.cactusADM/cactusADM_base.arm spec/CPU2006/436.cactusADM/benchADM.par > spec/CPU2006/436.cactusADM/cactusADM.ref.out 2> spec/CPU2006/436.cactusADM/cactusADM.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/459.GemsFDTD/GemsFDTD_base.arm > spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.out 2> spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 11 ]
	then
		rt0=191415
		rt1=42445 
		rt2=47497 
		rt3=88130 
		rt4=200896 
		rt5=51877

		avgips0=1206609988            
		avgips1=1380937043          
		avgips2=1460850171            
		avgips3=1475138112           
		avgips4=1488867903           
		avgips5=1221367950           

		eer0=1.31
		eer1=1.09
		eer2=0.96
		eer3=0.97
		eer4=1.08
		eer5=1.08
 
		appnae1="soplex_base.arm"
		appnae2="GemsFDTD_base.arm"
		appnae3="povray_base.arm"
		appnae4="milc_base.arm"
		appnae5="cactusADM_base.arm"
		appnae6="omnetpp_base.arm"
			
		./spec/CPU2006/450.soplex/soplex_base.arm -s1 -e -m15000 spec/CPU2006/450.soplex/pds-20.mps > spec/CPU2006/450.soplex/soplex.ref.pds-20.out 2> spec/CPU2006/450.soplex/soplex.ref.pds20.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/459.GemsFDTD/GemsFDTD_base.arm > spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.out 2> spec/CPU2006/459.GemsFDTD/GemsFDTD.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/453.povray/povray_base.arm spec/CPU2006/453.povray/SPEC-benchmark-ref.ini > povray.ref.out 2> povray.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/433.milc/milc_base.arm < spec/CPU2006/433.milc/su3imp.in > spec/CPU2006/433.milc/milc.ref.out 2> spec/CPU2006/433.milc/milc.ref.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/436.cactusADM/cactusADM_base.arm spec/CPU2006/436.cactusADM/benchADM.par > spec/CPU2006/436.cactusADM/cactusADM.ref.out 2> spec/CPU2006/436.cactusADM/cactusADM.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 12 ]
	then
		rt0=214224
		rt1=191415 
		rt2=51877 
		rt3=12436 
		rt4=92563 
		rt5=120528

		avgips0=1080145489             
		avgips1=1206609988           
		avgips2=1221367950             
		avgips3=1225674924            
		avgips4=229857935            
		avgips5=883221648            

		eer0=1.13
		eer1=1.31
		eer2=1.08
		eer3=1.30
		eer4=1.80
		eer5=1.12
 
		appnae1="gcc_base.arm"
		appnae2="soplex_base.arm"
		appnae3="omnetpp_base.arm"
		appnae4="astar_base.arm"
		appnae5="mcf_base.ArmLinuxGnuAbi-"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/403.gcc/gcc_base.arm spec/CPU2006/403.gcc/200.i -o spec/CPU2006/403.gcc/200.s > spec/CPU2006/403.gcc/gcc.ref.200.out 2> spec/CPU2006/403.gcc/gcc.ref.200.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/450.soplex/soplex_base.arm -s1 -e -m15000 spec/CPU2006/450.soplex/pds-20.mps > spec/CPU2006/450.soplex/soplex.ref.pds-20.out 2> spec/CPU2006/450.soplex/soplex.ref.pds20.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/473.astar/astar_base.arm spec/CPU2006/473.astar/lake.cfg > spec/CPU2006/473.astar/astar.out 2> spec/CPU2006/473.astar/astar.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 13 ]
	then
		rt0=63778
		rt1=127320 
		rt2=12436 
		rt3=92563 
		rt4=120528 
		rt5=51877

		avgips0=1214322619              
		avgips1=1775008158           
		avgips2=1225674924             
		avgips3=229857935            
		avgips4=883221648            
		avgips5=1221367950             

		eer0=1.31
		eer1=1.12
		eer2=1.30
		eer3=1.80
		eer4=1.12
		eer5=1.08
 
		appnae1="gobmk_base.arm"
		appnae2="bwaves_base.arm"
		appnae3="astar_base.arm"
		appnae4="mcf_base.ArmLinuxGnuAbi-"
		appnae5="perlbench_base.ArmLinuxGnuAbi-"
		appnae6="omnetpp_base.arm"
			
		./spec/CPU2006/445.gobmk/gobmk_base.arm --quiet --mode gtp < spec/CPU2006/445.gobmk/dniwog.tst > spec/CPU2006/445.gobmk/gobmk.reff.score2.out 2> spec/CPU2006/445.gobmk/gobmk.ref.score2.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/410.bwaves/bwaves_base.arm bwaves.in > bwaves.out 2> bwaves.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/473.astar/astar_base.arm spec/CPU2006/473.astar/lake.cfg > spec/CPU2006/473.astar/astar.out 2> spec/CPU2006/473.astar/astar.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 14 ]
	then
		rt0=160751
		rt1=720325 
		rt2=188156 
		rt3=120528 
		rt4=51877 
		rt5=92563

		avgips0=1776460007               
		avgips1=1795699576            
		avgips2=1799406948              
		avgips3=883221648             
		avgips4=1221367950             
		avgips5=229857935              

		eer0=1.27
		eer1=1.04
		eer2=1.02
		eer3=1.12
		eer4=1.08
		eer5=1.80
 
		appnae1="leslie3d_base.arm"
		appnae2="namd_base.arm"
		appnae3="lbm_base.arm"
		appnae4="perlbench_base.ArmLinuxGnuAbi-"
		appnae5="omnetpp_base.arm"
		appnae6="mcf_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/437.leslie3d/leslie3d_base.arm < spec/CPU2006/437.leslie3d/leslie3d.in > spec/CPU2006/437.leslie3d/leslie3d.ref.out 2> spec/CPU2006/437.leslie3d/leslie3d.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/444.namd/namd_base.arm --input spec/CPU2006/444.namd/namd.input --iterations 1 --output spec/CPU2006/444.namd/namd.out > spec/CPU2006/444.namd/namd.ref.out 2> spec/CPU2006/444.namd/namd.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/470.lbm/lbm_base.arm 30 spec/CPU2006/470.lbm/reference.dat 0 0 spec/CPU2006/470.lbm/100_100_130_ldc.of > spec/CPU2006/470.lbm/lbm.ref.out 2> spec/CPU2006/470.lbm/lbm.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err & 
		t5=$(($(date +%s%N)/1000000))
	elif [ $cnt -eq 15 ]
	then
		rt0=40342
		rt1=127320 
		rt2=51877 
		rt3=12436 
		rt4=92563 
		rt5=120528

		avgips0=1761880491              
		avgips1=1775008158           
		avgips2=1221367950             
		avgips3=1225674924            
		avgips4=229857935            
		avgips5=883221648            

		eer0=0.91
		eer1=1.13
		eer2=1.08
		eer3=1.30
		eer4=1.80
		eer5=1.12
 
		appnae1="gromacs"
		appnae2="bwaves_base.arm"
		appnae3="omnetpp_base.arm"
		appnae4="astar_base.arm"
		appnae5="mcf_base.ArmLinuxGnuAbi-"
		appnae6="perlbench_base.ArmLinuxGnuAbi-"
			
		./spec/CPU2006/435.gromacs/gromacs -silent -deffnm gromacs -nice 0 > gromacs.ref.out 2> gromacs.ref.err &
		t0=$(($(date +%s%N)/1000000))
		./spec/CPU2006/410.bwaves/bwaves_base.arm bwaves.in > bwaves.out 2> bwaves.ref.err &
		t1=$(($(date +%s%N)/1000000))
		./spec/CPU2006/471.omnetpp/omnetpp_base.arm spec/CPU2006/471.omnetpp/omnetpp.ini > spec/CPU2006/471.omnetpp/omnetpp.ref.log 2> spec/CPU2006/471.omnetpp/omnpp.ref.err &
		t2=$(($(date +%s%N)/1000000))
		./spec/CPU2006/473.astar/astar_base.arm spec/CPU2006/473.astar/lake.cfg > spec/CPU2006/473.astar/astar.out 2> spec/CPU2006/473.astar/astar.err &
		t3=$(($(date +%s%N)/1000000))
		./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err & 
		t4=$(($(date +%s%N)/1000000))
		./spec/CPU2006/400.perlbench/perlbench_base.ArmLinuxGnuAbi- -I./spec/CPU2006/400.perlbench/lib spec/CPU2006/400.perlbench/checkspam.pl 2500 5 25 11 150 1 1 1 1 > spec/CPU2006/400.perlbench/perlbench.ref.checkspam.out 2> spec/CPU2006/400.perlbench/perlbench.ref.checkspam.err & 
		t5=$(($(date +%s%N)/1000000))
	fi


	pid0="$(pidof ${appnae1})"
	pid1="$(pidof ${appnae2})"
	pid2="$(pidof ${appnae3})"
	pid3="$(pidof ${appnae4})"
	pid4="$(pidof ${appnae5})"
	pid5="$(pidof ${appnae6})"

	taskset -cp 3 $pid0
	af0=3
	taskset -cp 7 $pid1
	af1=7
	taskset -cp 6 $pid2
	af2=6
	taskset -cp 2 $pid3
	af3=2
	taskset -cp 1 $pid4
	af4=1
	taskset -cp 5 $pid5
	af5=5


	arraf[1]=3
	arraf[2]=7
	arraf[3]=6
	arraf[4]=2
	arraf[5]=1
	arraf[6]=5

	pcnt=6

	arrt[1]=$t0
	arrt[2]=$t1
	arrt[3]=$t2
	arrt[4]=$t3
	arrt[5]=$t4
	arrt[6]=$t5
	arrtcompleted[1]=0
	arrtcompleted[2]=0
	arrtcompleted[3]=0
	arrtcompleted[4]=0
	arrtcompleted[5]=0
	arrtcompleted[6]=0

	arrprevt[1]=$t0
	arrprevt[2]=$t1
	arrprevt[3]=$t2
	arrprevt[4]=$t3
	arrprevt[5]=$t4
	arrprevt[6]=$t5


	totalins0=0
	totalins1=0
	totalins2=0
	totalins3=0
	totalins4=0
	totalins5=0

	totaldur[1]=0
	totaldur[2]=0
	totaldur[3]=0
	totaldur[4]=0
	totaldur[5]=0
	totaldur[6]=0



	EDP=0
	curtedp=$(($(date +%s%N)/1000000))

		arrrt[1]=$rt0
		arrrt[2]=$rt1
		arrrt[3]=$rt2
		arrrt[4]=$rt3
		arrrt[5]=$rt4
		arrrt[6]=$rt5

		arravgips[1]=$avgips0
		arravgips[2]=$avgips1
		arravgips[3]=$avgips2
		arravgips[4]=$avgips3
		arravgips[5]=$avgips4
		arravgips[6]=$avgips5
       
		arreer[1]=$eer0
		arreer[2]=$eer1
		arreer[3]=$eer2
		arreer[4]=$eer3
		arreer[5]=$eer4
		arreer[6]=$eer5


	totaldurcompleted[1]=0
	totaldurcompleted[2]=0
	totaldurcompleted[3]=0
	totaldurcompleted[4]=0
	totaldurcompleted[5]=0
	totaldurcompleted[6]=0

	completed=0

	while [ $(echo ${#pcnt}) -gt 0 ]
	do
		##echo "66 $af0 $af1 $af2 $af3 $af4 $af5 $pid0 $pid1 $pid2 $pid3 $pid4 $pid5 $pid6 666"
		p0=""
		p1=""
		p2=""
		p3=""
		p4=""
		p5=""
		avablablebig=3
		avablablelittle=3
		if [ $(echo ${#pid0}) -gt 0 ]
		then
			if ! ps -p $pid0 > /dev/null; then
				completed=$(( $completed + 1 ))
				arrtcompleted[completed]=${arrrt[1]}
				totaldurcompleted[completed]=${totaldur[1]}
				pid0=""
				af0=-1
				af1=-1
				af2=-1
				af3=-1
				af4=-1
				af5=-1
				arraf[1]=-1
				arraf[2]=-1
				arraf[3]=-1
				arraf[4]=-1
				arraf[5]=-1
				arraf[6]=-1

				arrscore[1]=${arrscore[2]}
				arrscore[2]=${arrscore[3]}
				arrscore[3]=${arrscore[4]}
				arrscore[4]=${arrscore[5]}
				arrscore[5]=${arrscore[6]}

				arrpid[1]=${arrpid[2]}
				arrpid[2]=${arrpid[3]}
				arrpid[3]=${arrpid[4]}
				arrpid[4]=${arrpid[5]}
				arrpid[5]=${arrpid[6]}

				arraf[1]=${arraf[2]}
				arraf[2]=${arraf[3]}
				arraf[3]=${arraf[4]}
				arraf[4]=${arraf[5]}
				arraf[5]=${arraf[6]}

				arrrt[1]=${arrrt[2]}
				arrrt[2]=${arrrt[3]}
				arrrt[3]=${arrrt[4]}
				arrrt[4]=${arrrt[5]}
				arrrt[5]=${arrrt[6]}

				arravgips[1]=${arravgips[2]}
				arravgips[2]=${arravgips[3]}
				arravgips[3]=${arravgips[4]}
				arravgips[4]=${arravgips[5]}
				arravgips[5]=${arravgips[6]}

				arreer[1]=${arreer[2]}
				arreer[2]=${arreer[3]}
				arreer[3]=${arreer[4]}
				arreer[4]=${arreer[5]}
				arreer[5]=${arreer[6]}

				arrt[1]=${arrt[2]}
				arrt[2]=${arrt[3]}
				arrt[3]=${arrt[4]}
				arrt[4]=${arrt[5]}
				arrt[5]=${arrt[6]}

				totaldur[1]=${totaldur[2]}
				totaldur[2]=${totaldur[3]}
				totaldur[3]=${totaldur[4]}
				totaldur[4]=${totaldur[5]}
				totaldur[5]=${totaldur[6]}

				echo "00000000000000000000000000000000000000"
			fi
		fi
		if [ $(echo ${#pid1}) -gt 0 ]
		then
			if ! ps -p $pid1 > /dev/null; then
				completed=$(( $completed + 1 ))
				arrtcompleted[completed]=${arrrt[2]}
				totaldurcompleted[completed]=${totaldur[2]}
				pid1=""
				af1=-1
				af2=-1
				af3=-1
				af4=-1
				af5=-1
				arraf[2]=-1
				arraf[3]=-1
				arraf[4]=-1
				arraf[5]=-1
				arraf[6]=-1

				arrscore[2]=${arrscore[3]}
				arrscore[3]=${arrscore[4]}
				arrscore[4]=${arrscore[5]}
				arrscore[5]=${arrscore[6]}

				arrpid[2]=${arrpid[3]}
				arrpid[3]=${arrpid[4]}
				arrpid[4]=${arrpid[5]}
				arrpid[5]=${arrpid[6]}

				arraf[2]=${arraf[3]}
				arraf[3]=${arraf[4]}
				arraf[4]=${arraf[5]}
				arraf[5]=${arraf[6]}

				arrrt[2]=${arrrt[3]}
				arrrt[3]=${arrrt[4]}
				arrrt[4]=${arrrt[5]}
				arrrt[5]=${arrrt[6]}

				arravgips[2]=${arravgips[3]}
				arravgips[3]=${arravgips[4]}
				arravgips[4]=${arravgips[5]}
				arravgips[5]=${arravgips[6]}

				arreer[2]=${arreer[3]}
				arreer[3]=${arreer[4]}
				arreer[4]=${arreer[5]}
				arreer[5]=${arreer[6]}

				arrt[2]=${arrt[3]}
				arrt[3]=${arrt[4]}
				arrt[4]=${arrt[5]}
				arrt[5]=${arrt[6]}

				totaldur[2]=${totaldur[3]}
				totaldur[3]=${totaldur[4]}
				totaldur[4]=${totaldur[5]}
				totaldur[5]=${totaldur[6]}

				echo "111111111111111111111111111111111111111111"
			fi
		fi
		if [ $(echo ${#pid2}) -gt 0 ]
		then
			if ! ps -p $pid2 > /dev/null; then
				completed=$(( $completed + 1 ))
				arrtcompleted[completed]=${arrrt[3]}
				totaldurcompleted[completed]=${totaldur[3]}
				pid2=""
				af2=-1
				af3=-1
				af4=-1
				af5=-1
				arraf[3]=-1
				arraf[4]=-1
				arraf[5]=-1
				arraf[6]=-1

				arrscore[3]=${arrscore[4]}
				arrscore[4]=${arrscore[5]}
				arrscore[5]=${arrscore[6]}

				arrpid[3]=${arrpid[4]}
				arrpid[4]=${arrpid[5]}
				arrpid[5]=${arrpid[6]}

				arraf[3]=${arraf[4]}
				arraf[4]=${arraf[5]}
				arraf[5]=${arraf[6]}

				arrrt[3]=${arrrt[4]}
				arrrt[4]=${arrrt[5]}
				arrrt[5]=${arrrt[6]}

				arravgips[3]=${arravgips[4]}
				arravgips[4]=${arravgips[5]}
				arravgips[5]=${arravgips[6]}

				arreer[3]=${arreer[4]}
				arreer[4]=${arreer[5]}
				arreer[5]=${arreer[6]}

				arrt[3]=${arrt[4]}
				arrt[4]=${arrt[5]}
				arrt[5]=${arrt[6]}

				totaldur[3]=${totaldur[4]}
				totaldur[4]=${totaldur[5]}
				totaldur[5]=${totaldur[6]}
				echo "22222222222222222222222222222222222222222222222222222"
			fi
		fi
		if [ $(echo ${#pid3}) -gt 0 ]
		then
			if ! ps -p $pid3 > /dev/null; then
				completed=$(( $completed + 1 ))
				arrtcompleted[completed]=${arrrt[4]}
				totaldurcompleted[completed]=${totaldur[4]}
				pid3=""
				af3=-1
				af4=-1
				af5=-1
				arraf[4]=-1
				arraf[5]=-1
				arraf[6]=-1

				arrscore[4]=${arrscore[5]}
				arrscore[5]=${arrscore[6]}

				arrpid[4]=${arrpid[5]}
				arrpid[5]=${arrpid[6]}

				arraf[4]=${arraf[5]}
				arraf[5]=${arraf[6]}

				arrrt[4]=${arrrt[5]}
				arrrt[5]=${arrrt[6]}

				arravgips[4]=${arravgips[5]}
				arravgips[5]=${arravgips[6]}

				arreer[4]=${arreer[5]}
				arreer[5]=${arreer[6]}

				arrt[4]=${arrt[5]}
				arrt[5]=${arrt[6]}

				totaldur[4]=${totaldur[5]}
				totaldur[5]=${totaldur[6]}
				echo "3333333333333333333333333333333333333333333"
			fi
		fi
		if [ $(echo ${#pid4}) -gt 0 ]
		then
			if ! ps -p $pid4 > /dev/null; then
				completed=$(( $completed + 1 ))
				arrtcompleted[completed]=${arrrt[5]}
				totaldurcompleted[completed]=${totaldur[5]}
				pid4=""
				af4=-1
				af5=-1
				arraf[5]=-1
				arraf[6]=-1

				arrscore[5]=${arrscore[6]}

				arrpid[5]=${arrpid[6]}

				arraf[5]=${arraf[6]}

				arrrt[5]=${arrrt[6]}

				arravgips[5]=${arravgips[6]}

				arreer[5]=${arreer[6]}

				arrt[5]=${arrt[6]}

				totaldur[5]=${totaldur[6]}
				echo "44444444444444444444444444444444444444444444"
			fi
		fi
		if [ $(echo ${#pid5}) -gt 0 ]
		then
			if ! ps -p $pid5 > /dev/null; then
				completed=$(( $completed + 1 ))
				arrtcompleted[completed]=${arrrt[6]}
				totaldurcompleted[completed]=${totaldur[6]}
				pid5=""
				af5=-1
				arraf[6]=-1
				echo "555555555555555555555555555555555555555555"
			fi
		fi
		arrpid[1]=""
		arrpid[2]=""
		arrpid[3]=""
		arrpid[4]=""
		arrpid[5]=""
		arrpid[6]=""
		arrscore[1]="-1"
		arrscore[2]="-1"
		arrscore[3]="-1"
		arrscore[4]="-1"
		arrscore[5]="-1"
		arrscore[6]="-1"

		progress0=""
		progress1=""
		progress2=""
		progress3=""
		progress4=""
		progress5=""


		pcnt=""
		if [ $(echo ${#pid0}) -gt 0 ]
		then
			if [ $af0 != 2 ] && [ $af0 != 3 ] && [ $af0 != 1 ]
			then
				pcname="armv7_cortex_a15/inst_retired/"
			else
				pcname="armv7_cortex_a7/inst_retired/"
			fi
			pcnt=$(( $pcnt + 1 ))
			s1=$(($(date +%s%N)/1000000))
			poutput=`perf stat -B -e ${pcname}  -C ${af0} sleep 0.1 2>&1`
			s2=$(($(date +%s%N)/1000000))
			DIFF0b=$(($(( $s2 - $s1 ))))
			v0="${af0}':"
			v7="${pcname}"
			rest0=${poutput#*$v0}
			rest7=${poutput#*$v7}
			p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
			instructions0b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
			instructions0b="$(echo "${instructions0b//,}")"
			curt=$(($(date +%s%N)/1000000))		
			dur=$(( $curt-${arrprevt[pcnt]} ))
			instructions0b=$(( $instructions0b*$dur ))
			instructions0b=$(( $instructions0b/$DIFF0b ))
			arrprevt[pcnt]=$curt
			totalins0=$(( $totalins0 + $instructions0b ))
			totaldur[pcnt]=$(($(( $curt - ${arrt[pcnt]} ))))
			progress0="$(echo "scale=2; $(( $totalins0*1000 ))/$(( ${arravgips[pcnt]}*${totaldur[pcnt]} ))" | bc)"
			score0=$(echo "scale=2; $(echo "scale=2; ${arreer[pcnt]}" | bc)/$(echo "scale=2; $progress0" | bc) " | bc)
			score0=${arreer[pcnt]}
			
			arrpid[pcnt]=$pid0
			arrscore[pcnt]=$score0
		fi
		if [ $(echo ${#pid1}) -gt 0 ]
		then
			if [ $af1 != 2 ] && [ $af1 != 3 ] && [ $af1 != 1 ]
			then
				pcname="armv7_cortex_a15/inst_retired/"
			else
				pcname="armv7_cortex_a7/inst_retired/"
			fi
			pcnt=$(( $pcnt + 1 ))
			s1=$(($(date +%s%N)/1000000))
			poutput=`perf stat -B -e ${pcname}  -C ${af1} sleep 0.1 2>&1`
			s2=$(($(date +%s%N)/1000000))
			DIFF0b=$(($(( $s2 - $s1 ))))
			v0="${af1}':"
			v7="${pcname}"
			rest0=${poutput#*$v0}
			rest7=${poutput#*$v7}
			p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
			instructions0b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
			instructions0b="$(echo "${instructions0b//,}")"
			curt=$(($(date +%s%N)/1000000))		
			dur=$(( $curt-${arrprevt[pcnt]} ))
			instructions0b=$(( $instructions0b*$dur ))
			instructions0b=$(( $instructions0b/$DIFF0b ))
			arrprevt[pcnt]=$curt
			totalins1=$(( $totalins1 + $instructions0b ))
			totaldur[pcnt]=$(($(( $curt - ${arrt[pcnt]} ))))
			progress1="$(echo "scale=2; $(( $totalins1*1000 ))/$(( ${arravgips[pcnt]}*${totaldur[pcnt]} ))" | bc)"
		
			score1=$(echo "scale=2; $(echo "scale=2; ${arreer[pcnt]}" | bc)/$(echo "scale=2; $progress1" | bc) " | bc)
			score1=${arreer[pcnt]}
			
			arrpid[pcnt]=$pid1
			arrscore[pcnt]=$score1
		fi	
		if [ $(echo ${#pid2}) -gt 0 ]
		then
			if [ $af2 != 2 ] && [ $af2 != 3 ] && [ $af2 != 1 ]
			then
				pcname="armv7_cortex_a15/inst_retired/"
			else
				pcname="armv7_cortex_a7/inst_retired/"
			fi
			pcnt=$(( $pcnt + 1 ))
			s1=$(($(date +%s%N)/1000000))
			poutput=`perf stat -B -e ${pcname}  -C ${af2} sleep 0.1 2>&1`
			s2=$(($(date +%s%N)/1000000))
			DIFF0b=$(($(( $s2 - $s1 ))))
			v0="${af2}':"
			v7="${pcname}"
			rest0=${poutput#*$v0}
			rest7=${poutput#*$v7}
			p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
			instructions0b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
			instructions0b="$(echo "${instructions0b//,}")"
			curt=$(($(date +%s%N)/1000000))		
			dur=$(( $curt-${arrprevt[pcnt]} ))
			instructions0b=$(( $instructions0b*$dur ))
			instructions0b=$(( $instructions0b/$DIFF0b ))
			arrprevt[pcnt]=$curt
			totalins2=$(( $totalins2 + $instructions0b ))
			totaldur[pcnt]=$(($(( $curt - ${arrt[pcnt]} ))))
			progress2="$(echo "scale=2; $(( $totalins2*1000 ))/$(( ${arravgips[pcnt]}*${totaldur[pcnt]} ))" | bc)"
			score2=$(echo "scale=2; $(echo "scale=2; ${arreer[pcnt]}" | bc)/$(echo "scale=2; $progress2" | bc) " | bc)
			score2=${arreer[pcnt]}
			
			arrpid[pcnt]=$pid2
			arrscore[pcnt]=$score2

		
		fi	
		if [ $(echo ${#pid3}) -gt 0 ]
		then
			if [ $af3 != 2 ] && [ $af3 != 3 ] && [ $af3 != 1 ]
			then
				pcname="armv7_cortex_a15/inst_retired/"
			else
				pcname="armv7_cortex_a7/inst_retired/"
			fi
			pcnt=$(( $pcnt + 1 ))
			s1=$(($(date +%s%N)/1000000))
			poutput=`perf stat -B -e ${pcname}  -C ${af3} sleep 0.1 2>&1`
			s2=$(($(date +%s%N)/1000000))
			DIFF0b=$(($(( $s2 - $s1 ))))
			v0="${af3}':"
			v7="${pcname}"
			rest0=${poutput#*$v0}
			rest7=${poutput#*$v7}
			p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
			instructions0b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
			instructions0b="$(echo "${instructions0b//,}")"
			curt=$(($(date +%s%N)/1000000))		
			dur=$(( $curt-${arrprevt[pcnt]} ))
			instructions0b=$(( $instructions0b*$dur ))
			instructions0b=$(( $instructions0b/$DIFF0b ))
			arrprevt[pcnt]=$curt
			totalins3=$(( $totalins3 + $instructions0b ))
			totaldur[pcnt]=$(($(( $curt - ${arrt[pcnt]} ))))
			progress3="$(echo "scale=2; $(( $totalins3*1000 ))/$(( ${arravgips[pcnt]}*${totaldur[pcnt]} ))" | bc)"
			score3=$(echo "scale=2; $(echo "scale=2; ${arreer[pcnt]}" | bc)/$(echo "scale=2; $progress3" | bc) " | bc)
			score3=${arreer[pcnt]}
			
			arrpid[pcnt]=$pid3
			arrscore[pcnt]=$score3
			##echo "ssssssss $pcnt $pid3 $score3 ${af3}"
		fi
		if [ $(echo ${#pid4}) -gt 0 ]
		then
			if [ $af4 != 2 ] && [ $af4 != 3 ] && [ $af4 != 1 ]
			then
				pcname="armv7_cortex_a15/inst_retired/"
			else
				pcname="armv7_cortex_a7/inst_retired/"
			fi
			pcnt=$(( $pcnt + 1 ))
			s1=$(($(date +%s%N)/1000000))
			poutput=`perf stat -B -e ${pcname}  -C ${af4} sleep 0.1 2>&1`
			s2=$(($(date +%s%N)/1000000))
			DIFF0b=$(($(( $s2 - $s1 ))))
			v0="${af4}':"
			v7="${pcname}"
			rest0=${poutput#*$v0}
			rest7=${poutput#*$v7}
			p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
			instructions0b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
			instructions0b="$(echo "${instructions0b//,}")"
			curt=$(($(date +%s%N)/1000000))		
			dur=$(( $curt-${arrprevt[pcnt]} ))
			instructions0b=$(( $instructions0b*$dur ))
			instructions0b=$(( $instructions0b/$DIFF0b ))
			arrprevt[pcnt]=$curt
			totalins4=$(( $totalins4 + $instructions0b ))
			totaldur[pcnt]=$(($(( $curt - ${arrt[pcnt]} ))))
			progress4="$(echo "scale=2; $(( $totalins4*1000 ))/$(( ${arravgips[pcnt]}*${totaldur[pcnt]} ))" | bc)"
			score4=$(echo "scale=2; $(echo "scale=2; ${arreer[pcnt]}" | bc)/$(echo "scale=2; $progress4" | bc) " | bc)
			score4=${arreer[pcnt]}
			
			arrpid[pcnt]=$pid4
			arrscore[pcnt]=$score4
		fi
		if [ $(echo ${#pid5}) -gt 0 ]
		then
			if [ $af5 != 2 ] && [ $af5 != 3 ] && [ $af5 != 1 ]
			then
				pcname="armv7_cortex_a15/inst_retired/"
			else
				pcname="armv7_cortex_a7/inst_retired/"
			fi
			pcnt=$(( $pcnt + 1 ))
			s1=$(($(date +%s%N)/1000000))
			poutput=`perf stat -B -e ${pcname}  -C ${af5} sleep 0.1 2>&1`
			s2=$(($(date +%s%N)/1000000))
			DIFF0b=$(($(( $s2 - $s1 ))))
			v0="${af5}':"
			v7="${pcname}"
			rest0=${poutput#*$v0}
			rest7=${poutput#*$v7}
			p0=$(( ${#poutput} - ${#rest0} - ${#v0} ))
			instructions0b=$(echo ${poutput:(p0+${#v0}-1):100}| cut -d ' ' -f 2)
			instructions0b="$(echo "${instructions0b//,}")"
			curt=$(($(date +%s%N)/1000000))		
			dur=$(( $curt-${arrprevt[pcnt]} ))
			instructions0b=$(( $instructions0b*$dur ))
			instructions0b=$(( $instructions0b/$DIFF0b ))
			arrprevt[pcnt]=$curt
			totalins5=$(( $totalins5 + $instructions0b ))
			totaldur[pcnt]=$(($(( $curt - ${arrt[pcnt]} ))))
			progress5="$(echo "scale=2; $(( $totalins5*1000 ))/$(( ${arravgips[pcnt]}*${totaldur[pcnt]} ))" | bc)"
			score5=$(echo "scale=2; $(echo "scale=2; ${arreer[pcnt]}" | bc)/$(echo "scale=2; $progress5" | bc) " | bc)
			score5=${arreer[pcnt]}
			
			arrpid[pcnt]=$pid5
			arrscore[pcnt]=$score5
		fi
		##########################sort
	cc=1
		##echo 13
		while [ $cc -lt 5 ]
		do
				
			cc2=$(( $cc + 0 ))
			##echo 12
			while [ $cc2 -lt 6 ]
			do
				##echo "${arrscore[$cc2]} < ${arrscore[$(( $cc2 + 1 ))]} sa" 
					
				if (( $(echo "${arrscore[$cc2]} < ${arrscore[$(( $cc2 + 1 ))]}" |bc -l) ))
				then
					temp=${arrscore[$(( $cc2 + 1 ))]}
					arrscore[$(( $cc2 + 1 ))]=${arrscore[$cc2]}					
					arrscore[$cc2]=$temp				
					temp=${arrpid[$(( $cc2 + 1 ))]}
					arrpid[$(( $cc2 + 1 ))]=${arrpid[$cc2]}
					arrpid[$cc2]=$temp
					temp=${arraf[$(( $cc2 + 1 ))]}
					arraf[$(( $cc2 + 1 ))]=${arraf[$cc2]}
					arraf[$cc2]=$temp
					
					temp=${arrrt[$(( $cc2 + 1 ))]}
					arrrt[$(( $cc2 + 1 ))]=${arrrt[$cc2]}
					arrrt[$cc2]=$temp
					
					temp=${arravgips[$(( $cc2 + 1 ))]}
					arravgips[$(( $cc2 + 1 ))]=${arravgips[$cc2]}
					arravgips[$cc2]=$temp
					
					temp=${arreer[$(( $cc2 + 1 ))]}
					arreer[$(( $cc2 + 1 ))]=${arreer[$cc2]}
					arreer[$cc2]=$temp
					
					temp=${arrt[$(( $cc2 + 1 ))]}
					arrt[$(( $cc2 + 1 ))]=${arrt[$cc2]}
					arrt[$cc2]=$temp
					
					temp=${totaldur[$(( $cc2 + 1 ))]}
					totaldur[$(( $cc2 + 1 ))]=${totaldur[$cc2]}
					totaldur[$cc2]=$temp



				fi
				
				cc2=$(( $cc2 + 1 ))
			done
			cc=$(( $cc + 1 ))
		done		
		apid0=${arrpid[1]}
		apid1=${arrpid[2]}
		apid2=${arrpid[3]}
		apid3=${arrpid[4]}
		apid4=${arrpid[5]}
		apid5=${arrpid[6]}
		ascore0=${arrscore[1]}
		ascore1=${arrscore[2]}
		ascore2=${arrscore[3]}
		ascore3=${arrscore[4]}
		ascore4=${arrscore[5]}
		ascore5=${arrscore[6]}
		pid0=${arrpid[1]}
		pid1=${arrpid[2]}
		pid2=${arrpid[3]}
		pid3=${arrpid[4]}
		pid4=${arrpid[5]}
		pid5=${arrpid[6]}


		##echo "-$apid0 -$apid1 -$apid2 -$apid3 -$apid4 -$apid5"
		##########################
		
		if [ $(echo ${#apid0}) -gt 0 ]
		then
			aaf0=7
			 
			if [ $af0 -ne $aaf0 ]
			then
				taskset -cp $aaf0 $apid0
				arraf[1]=$aaf0
			fi
		fi
		if [ $(echo ${#apid1}) -gt 0 ]
		then
			aaf1=6
			if [ $af1 -ne $aaf1 ]
			then
				taskset -cp $aaf1 $apid1
				arraf[2]=$aaf1
			fi
		fi
		if [ $(echo ${#apid2}) -gt 0 ]
		then
			aaf2=5
			if [ $af2 -ne $aaf2 ]
			then
				taskset -cp $aaf2 $apid2
				arraf[3]=$aaf2
			fi
		fi
		if [ $(echo ${#apid3}) -gt 0 ]
		then
			echo "$af3 ${arraf[4]} $aaf3"
			aaf3=3
			if [ $af3 -ne $aaf3 ]
			then
				taskset -cp $aaf3 $apid3
				arraf[4]=$aaf3
			fi
		fi
		if [ $(echo ${#apid4}) -gt 0 ]
		then
			aaf4=2
			if [ $af4 -ne $aaf4 ]
			then
				taskset -cp $aaf4 $apid4
				arraf[5]=$aaf4
			fi
		fi
		if [ $(echo ${#apid5}) -gt 0 ]
		then
			aaf5=1
			if [ $af5 -ne $aaf5 ]
			then
				taskset -cp $aaf5 $apid5
				arraf[6]=$aaf5
			fi
		fi
				
		af0=${arraf[1]}
		af1=${arraf[2]}
		af2=${arraf[3]}
		af3=${arraf[4]}
		af4=${arraf[5]}
		af5=${arraf[6]}
		########################frequency####################################
		
		if [ $pcnt -gt 3 ]
		then
			previousst=1
			uniformthresh=0.75
			freqthreshold=1400

			max=10
			for i in `seq 1 $max`
			do
				stprog=" $pcnt"
				if [ $(echo ${#progress0}) -gt 0 ]
				then
					if (( $(echo "$progress0 >= 1" |bc -l) ))
					then
						stprog="$stprog 1"
					else
						stprog="$stprog $progress0"
					fi
				fi
			
				if [ $(echo ${#progress1}) -gt 0 ]
				then
					if (( $(echo "$progress1 >= 1" |bc -l) ))
					then
						stprog="$stprog 1"
					else
						stprog="$stprog $progress1"
					fi
				fi

				if [ $(echo ${#progress2}) -gt 0 ]
				then
					if (( $(echo "$progress2 >= 1" |bc -l) ))
					then
						stprog="$stprog 1"
					else
						stprog="$stprog $progress2"
					fi
				fi

				if [ $(echo ${#progress3}) -gt 0 ]
				then
					if (( $(echo "$progress3 >= 1" |bc -l) ))
					then
						stprog="$stprog 1"
					else
						stprog="$stprog $progress3"
					fi
				fi
				if [ $(echo ${#progress4}) -gt 0 ]
				then
					if (( $(echo "$progress4 >= 1" |bc -l) ))
					then
						stprog="$stprog 1"
					else
						stprog="$stprog $progress4"
					fi
				fi
				if [ $(echo ${#progress5}) -gt 0 ]
				then
					if (( $(echo "$progress5 >= 1" |bc -l) ))
					then
						stprog="$stprog 1"
					else
						stprog="$stprog $progress5"
					fi
				fi
				#echo $stprog

				currentuniformity="$(./cluni $stprog)"
				echo $currentuniformity
				CPU4_FREQ=$((`cat /sys/devices/system/cpu/cpu7/cpufreq/scaling_cur_freq`/1000))
			
				lbratio="$(echo "scale=2; $freqthreshold/$CPU4_FREQ" | bc)"
				#echo "lbratio=$lbratio"
				if (( $(echo "$currentuniformity < $uniformthresh" |bc -l) )) && (( $(echo "$lbratio >= 1.1" |bc -l) )) 
				then
					currentst=1
					elif (( $(echo "$currentuniformity >= $uniformthresh" |bc -l) )) && [ $CPU4_FREQ -le $freqthreshold ] && [ $previousst -lt 2 ]
					then
						currentst=2
						elif (( $(echo "$currentuniformity < $uniformthresh" |bc -l) ))
						then
							currentst=3
							elif (( $(echo "$currentuniformity >= $uniformthresh" |bc -l) )) && [ $CPU4_FREQ -gt $freqthreshold ]
							then
								currentst=4
								elif (( $(echo "$currentuniformity >= $uniformthresh" |bc -l) )) && [ $CPU4_FREQ -le $freqthreshold ] && [ $previousst -gt 2 ]
								then
									currentst=5
			
				fi
				CPU4_FREQnew=$CPU4_FREQ
				if [ $currentst -eq 3 ] || [ $currentst -eq 4 ]
				then
					if [ $CPU4_FREQ -gt 200 ]
					then
						CPU4_FREQnew=$(( $CPU4_FREQ - 100 ))
					fi
					elif [ $currentst -eq 1 ] || [ $currentst -eq 2 ]
					then
					if [ $CPU4_FREQ -lt 2000 ]
					then
						CPU4_FREQnew=$(( $CPU4_FREQ + 100 )) 
					fi
				fi
	
				if [ $CPU4_FREQ -ne $CPU4_FREQnew ]
				then
				##echo "$CPU4_FREQ $CPU4_FREQnew"
					CPU4_FREQnew=$(( $CPU4_FREQnew * 1000 )) 
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu4/cpufreq/scaling_min_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu5/cpufreq/scaling_min_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu6/cpufreq/scaling_min_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu7/cpufreq/scaling_min_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu4/cpufreq/scaling_max_freq		
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu5/cpufreq/scaling_max_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu6/cpufreq/scaling_max_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu7/cpufreq/scaling_max_freq

				
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu4/cpufreq/scaling_max_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu5/cpufreq/scaling_max_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu6/cpufreq/scaling_max_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu7/cpufreq/scaling_max_freq
	
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu4/cpufreq/scaling_min_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu5/cpufreq/scaling_min_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu6/cpufreq/scaling_min_freq
				echo $CPU4_FREQnew >/sys/devices/system/cpu/cpu7/cpufreq/scaling_min_freq
				fi
	
				previousst=$currentst
				#echo "$currentuniformity $currentst $CPU4_FREQ $CPU4_FREQnew"
		
			

			done
		fi 
		
		###########################################################

		A7_W=`cat /sys/bus/i2c/drivers/INA231/0-0045/sensor_W`
		A15_W=`cat /sys/bus/i2c/drivers/INA231/0-0040/sensor_W`

		prevedp=$curtedp
		curtedp=$(($(date +%s%N)/1000000))		
		curedp=$(echo "scale=2; $(echo "scale=2; $(( $curtedp-$prevedp ))/1000" | bc)*$(echo "scale=2; $A7_W+$A15_W" | bc)" | bc)
		EDP=$(echo "scale=2; $EDP+$curedp" | bc)
				

		sleep 1s

	if [ $pcnt -le 3 ] && [ $CPU4_FREQ -lt 2000 ]
	then
		echo 1400000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
		echo 1400000 >/sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq
		echo 1400000 >/sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
		echo 1400000 >/sys/devices/system/cpu/cpu3/cpufreq/scaling_max_freq
		echo 2000000 >/sys/devices/system/cpu/cpu4/cpufreq/scaling_max_freq
		echo 2000000 >/sys/devices/system/cpu/cpu5/cpufreq/scaling_max_freq
		echo 2000000 >/sys/devices/system/cpu/cpu6/cpufreq/scaling_max_freq
		echo 2000000 >/sys/devices/system/cpu/cpu7/cpufreq/scaling_max_freq

		echo 1400000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
		echo 1400000 >/sys/devices/system/cpu/cpu1/cpufreq/scaling_min_freq
		echo 1400000 >/sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq
		echo 1400000 >/sys/devices/system/cpu/cpu3/cpufreq/scaling_min_freq
		echo 2000000 >/sys/devices/system/cpu/cpu4/cpufreq/scaling_min_freq
		echo 2000000 >/sys/devices/system/cpu/cpu5/cpufreq/scaling_min_freq
		echo 2000000 >/sys/devices/system/cpu/cpu6/cpufreq/scaling_min_freq
		echo 2000000 >/sys/devices/system/cpu/cpu7/cpufreq/scaling_min_freq
	fi
		

		##echo "${totaldurcompleted[1]} ${totaldurcompleted[2]} ${totaldurcompleted[3]} ${totaldurcompleted[4]} ${totaldurcompleted[5]} ${totaldurcompleted[6]}"

		echo "$completed ${arrtcompleted[1]} ${arrtcompleted[2]} ${arrtcompleted[3]} ${arrtcompleted[4]} ${arrtcompleted[5]} ${arrtcompleted[6]}"
echo "${arrrt[1]} ${arrrt[2]} ${arrrt[3]} ${arrrt[4]} ${arrrt[5]} ${arrrt[6]}"
##echo "${arreer[1]} ${arreer[2]} ${arreer[3]} ${arreer[4]} ${arreer[5]} ${arreer[6]}"


	done

	if [ $completed -lt 6 ]
	then
		completed=$(( $completed + 1 ))
		arrtcompleted[completed]=${arrrt[1]}
		totaldurcompleted[completed]=${totaldur[1]}
	fi

	pd0="$(echo "scale=2; $(( ${arrtcompleted[1]} ))/$(( ${totaldurcompleted[1]} ))" | bc)"
	pd1="$(echo "scale=2; $(( ${arrtcompleted[2]} ))/$(( ${totaldurcompleted[2]} ))" | bc)"
	pd2="$(echo "scale=2; $(( ${arrtcompleted[3]} ))/$(( ${totaldurcompleted[3]} ))" | bc)"
	pd3="$(echo "scale=2; $(( ${arrtcompleted[4]} ))/$(( ${totaldurcompleted[4]} ))" | bc)"
	pd4="$(echo "scale=2; $(( ${arrtcompleted[5]} ))/$(( ${totaldurcompleted[5]} ))" | bc)"
	pd5="$(echo "scale=2; $(( ${arrtcompleted[6]} ))/$(( ${totaldurcompleted[6]} ))" | bc)"

	uniformity="$(./cluni 6 $pd0 $pd1 $pd2 $pd3 $pd4 $pd5)"
	echo " myschdvfs  $cnt  ${EDP} ${arrtcompleted[1]} ${arrtcompleted[2]} ${arrtcompleted[3]} ${arrtcompleted[4]} ${arrtcompleted[5]} ${arrtcompleted[6]} ${totaldurcompleted[1]} ${totaldurcompleted[2]} ${totaldurcompleted[3]} ${totaldurcompleted[4]} ${totaldurcompleted[5]} ${totaldurcompleted[6]} $pd0 $pd1 $pd2 $pd3 $pd4 $pd5 $uniformity" >> salamioutput/rescmp.log
	cnt=$(( $cnt + 1 ))
done

