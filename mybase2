
echo 1 > /sys/bus/i2c/drivers/INA231/0-0045/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0040/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0041/enable
echo 1 > /sys/bus/i2c/drivers/INA231/0-0044/enable



echo 1
echo userspace >/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu3/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu4/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu5/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu6/cpufreq/scaling_governor
echo userspace >/sys/devices/system/cpu/cpu7/cpufreq/scaling_governor
echo 2
echo 1400000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
echo 1400000 >/sys/devices/system/cpu/cpu3/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu4/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu5/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu6/cpufreq/scaling_max_freq
echo 2000000 >/sys/devices/system/cpu/cpu7/cpufreq/scaling_max_freq
echo 3
echo 1400000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu1/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq
echo 1400000 >/sys/devices/system/cpu/cpu3/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu4/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu5/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu6/cpufreq/scaling_min_freq
echo 2000000 >/sys/devices/system/cpu/cpu7/cpufreq/scaling_min_freq


pid0="$(pidof hmmer_base.ArmLinuxGnuAbi-)"
if [ $(echo ${#pid0}) -gt 0 ]
then
	echo 1
else
	./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/hmmer_base.ArmLinuxGnuAbi-  --num 50000 ./spec/CPU2006/456.hmmer/run/run_base_ref_ArmLinuxGnuAbi-.0000/nph3.hmm &	
t0=$(($(date +%s%N)/1000000))
fi
sleep 1s
pid0="$(pidof hmmer_base.ArmLinuxGnuAbi-)"
taskset -cp 6 $pid0
while [ $pid0 -gt 0 ]
do
	pid0="$(pidof hmmer_base.ArmLinuxGnuAbi-)"
	sleep 1s
done
curt=$(($(date +%s%N)/1000000))
dur0=$(( $curt-$t0 ))

pid0="$(pidof bzip2_base.ArmLinuxGnuAbi-)"
if [ $(echo ${#pid0}) -gt 0 ]
then
	echo 1
else
	./spec/CPU2006/401.bzip2/run/run_base_ref_ArmLinuxGnuAbi-.0000/bzip2_base.ArmLinuxGnuAbi- ./spec/CPU2006/401.bzip2/run/run_base_ref_ArmLinuxGnuAbi-.0000/input.program & 	
t0=$(($(date +%s%N)/1000000))
fi
sleep 1s
pid0="$(pidof bzip2_base.ArmLinuxGnuAbi-)"
taskset -cp 6 $pid0
while [ $pid0 -gt 0 ]
do
	pid0="$(pidof bzip2_base.ArmLinuxGnuAbi-)"
	sleep 1s
done
curt=$(($(date +%s%N)/1000000))
dur1=$(( $curt-$t0 ))

pid0="$(pidof mcf_base.ArmLinuxGnuAbi-)"
if [ $(echo ${#pid0}) -gt 0 ]
then
	echo 1
else
	./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/mcf_base.ArmLinuxGnuAbi- ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.in -o ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.out -e ./spec/CPU2006/429.mcf/run/run_base_ref_ArmLinuxGnuAbi-.0000/inp.err & 	
t0=$(($(date +%s%N)/1000000))
fi
sleep 1s
pid0="$(pidof mcf_base.ArmLinuxGnuAbi-)"
taskset -cp 6 $pid0
while [ $pid0 -gt 0 ]
do
	pid0="$(pidof mcf_base.ArmLinuxGnuAbi-)"
	sleep 1s
done
curt=$(($(date +%s%N)/1000000))
dur2=$(( $curt-$t0 ))

pid0="$(pidof h264ref_base.ArmLinuxGnuAbi-)"
if [ $(echo ${#pid0}) -gt 0 ]
then
	echo 1
else
	./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/h264ref_base.ArmLinuxGnuAbi- -d ./spec/CPU2006/464.h264ref/run/run_base_ref_ArmLinuxGnuAbi-.0000/foreman_ref_encoder_main.cfg & 	
t0=$(($(date +%s%N)/1000000))
fi
sleep 1s
pid0="$(pidof h264ref_base.ArmLinuxGnuAbi-)"
taskset -cp 6 $pid0
while [ $pid0 -gt 0 ]
do
	pid0="$(pidof h264ref_base.ArmLinuxGnuAbi-)"
	sleep 1s
done
curt=$(($(date +%s%N)/1000000))
dur3=$(( $curt-$t0 ))

	echo "${dur0} ${dur1} ${dur2} ${dur3}" >> resmybase2.log

